
    
//This file is generated by ZBNF/zbnfjax/jzTc/Cheader2Refl.jzTc
#include "Jc/FormatterJc.h"  
#include <Jc/ReflectionJc.h>
#include <stddef.h>


extern_C const ClassJc reflection_FormatterJc_s;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_StringBuilderJcREF;  //used for field buffer

extern_C const ClassJc reflection_LocaleJcREF;  //used for field locale

const struct Reflection_Fields_FormatterJc_s_t
{ ObjectArrayJc head;
  FieldJc data[3];
} reflection_Fields_FormatterJc_s =
{ CONST_ObjectArrayJc(FieldJc, 2, OBJTYPE_FieldJc, null, &reflection_Fields_FormatterJc_s)
, { { "buffer"
    , 0   //no Array, no Bitfield
    , &reflection_StringBuilderJcREF                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((FormatterJc_s*)(0x1000))->buffer) -(int32)(FormatterJc_s*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_FormatterJc_s
    }
  , { "locale"
    , 0   //no Array, no Bitfield
    , &reflection_LocaleJcREF                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((FormatterJc_s*)(0x1000))->locale) -(int32)(FormatterJc_s*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_FormatterJc_s
    }
    
} }; 
                                                    

const ClassJc reflection_FormatterJc_s =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_FormatterJc_s, &reflection_ClassJc)
, "FormatterJc_s"
, 0
, sizeof(FormatterJc_s)
, (FieldJcArray const*)&reflection_Fields_FormatterJc_s  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};

