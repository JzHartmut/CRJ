
    
//This file is generated by ZBNF/zbnfjax/jzTc/Cheader2Refl.jzTc
#include "Jc/OsWrapperJc.h"  
#include <Jc/ReflectionJc.h>
#include <stddef.h>


extern_C const ClassJc reflection_HandleItem_handle;  //the just defined reflection_ used in the own fields.
#define reflection_OS_HandleWaitNotify_t reflection_OS_HandleWaitNotify
extern_C const ClassJc reflection_OS_HandleWaitNotify_t;  //used for field wait

#define reflection_OS_HandleThread_t reflection_OS_HandleThread
extern_C const ClassJc reflection_OS_HandleThread_t;  //used for field thread_xxx

#define reflection_HandleItem_t reflection_HandleItem
extern_C const ClassJc reflection_HandleItem_t;  //used for field nextFree

const struct Reflection_Fields_HandleItem_handle_t
{ ObjectArrayJc head;
  FieldJc data[3];
} reflection_Fields_HandleItem_handle =
{ INIZ_ObjectArrayJc(reflection_Fields_HandleItem_handle, 3, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "wait"
    , 0   //no Array, no Bitfield                           
    , &reflection_OS_HandleWaitNotify                                                                                            
    , kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((--outside--*)(0x1000))->handle.wait)) - ((intptr_t)(&((--outside--*)(0x1000))->handle)) )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_HandleItem_handle
    }
  , 
    { "thread_xxx"
    , 0   //no Array, no Bitfield                           
    , &reflection_OS_HandleThread                                                                                            
    , kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((--outside--*)(0x1000))->handle.thread_xxx)) - ((intptr_t)(&((--outside--*)(0x1000))->handle)) )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_HandleItem_handle
    }
  , 
    { "nextFree"
    , 0   //no Array, no Bitfield                           
    , &reflection_HandleItem                                                                                            
    , kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((--outside--*)(0x1000))->handle.nextFree)) - ((intptr_t)(&((--outside--*)(0x1000))->handle)) )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_HandleItem_handle
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_HandleItem_handle =
{ INIZ_objReflId_ObjectJc(reflection_HandleItem_handle, &reflection_ClassJc, INIZ_ID_ClassJc)
, "HandleItem_handle"
, 0
, sizeof(((--outside--*)0x1000)->handle)
, (FieldJcArray const*)&reflection_Fields_HandleItem_handle  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};



extern_C const ClassJc reflection_HandleItem;  //the just defined reflection_ used in the own fields.
#define reflection_OS_Mutex_t reflection_OS_Mutex
extern_C const ClassJc reflection_OS_Mutex_t;  //used for field handleMutex

const struct Reflection_Fields_HandleItem_t
{ ObjectArrayJc head;
  FieldJc data[3];
} reflection_Fields_HandleItem =
{ INIZ_ObjectArrayJc(reflection_Fields_HandleItem, 3, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "handle"
    , 0   //no Array, no Bitfield                           
    , &reflection_HandleItem_handle                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((HandleItem*)(0x1000))->handle)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_HandleItem
    }
  , 
    { "handleMutex"
    , 0   //no Array, no Bitfield                           
    , &reflection_OS_Mutex                                                                                            
    , kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((HandleItem*)(0x1000))->handleMutex)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_HandleItem
    }
  , 
    { "name"
    , 8 //nrofArrayElements                           
    , REFLECTION_int8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) | kStaticArray_Modifier_reflectJc|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((HandleItem*)(0x1000))->name)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_HandleItem
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_HandleItem =
{ INIZ_objReflId_ObjectJc(reflection_HandleItem, &reflection_ClassJc, INIZ_ID_ClassJc)
, "HandleItem"
, 0
, sizeof(HandleItem)
, (FieldJcArray const*)&reflection_Fields_HandleItem  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};



extern_C const ClassJc reflection_OsWrapperJc_s;  //the just defined reflection_ used in the own fields.
#define reflection_OS_Mutex_t reflection_OS_Mutex
extern_C const ClassJc reflection_OS_Mutex_t;  //used for field mutexInitHandle

extern_C const ClassJc reflection_HandleItem;  //used for field freeHandle

extern_C const ClassJc reflection_HandleItem;  //used for field handleItemsJc

const struct Reflection_Fields_OsWrapperJc_s_t
{ ObjectArrayJc head;
  FieldJc data[5];
} reflection_Fields_OsWrapperJc_s =
{ INIZ_ObjectArrayJc(reflection_Fields_OsWrapperJc_s, 5, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "mutexInitHandle"
    , 0   //no Array, no Bitfield                           
    , &reflection_OS_Mutex                                                                                            
    , kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((OsWrapperJc_s*)(0x1000))->mutexInitHandle)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_OsWrapperJc_s
    }
  , 
    { "freeHandle"
    , 0   //no Array, no Bitfield                           
    , &reflection_HandleItem                                                                                            
    , kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((OsWrapperJc_s*)(0x1000))->freeHandle)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_OsWrapperJc_s
    }
  , 
    { "nrofHandle"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((OsWrapperJc_s*)(0x1000))->nrofHandle)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_OsWrapperJc_s
    }
  , 
    { "spare_align8"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((OsWrapperJc_s*)(0x1000))->spare_align8)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_OsWrapperJc_s
    }
  , 
    { "handleItemsJc"
    , 1024 //nrofArrayElements                           
    , &reflection_HandleItem                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((OsWrapperJc_s*)(0x1000))->handleItemsJc)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_OsWrapperJc_s
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_OsWrapperJc_s =
{ INIZ_objReflId_ObjectJc(reflection_OsWrapperJc_s, &reflection_ClassJc, INIZ_ID_ClassJc)
, "OsWrapperJc_s"
, 0
, sizeof(OsWrapperJc_s)
, (FieldJcArray const*)&reflection_Fields_OsWrapperJc_s  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};

