
    
//This file is generated by ZBNF/zbnfjax/jzTc/Cheader2Refl.jzTc
#include "Jc/LinkedListJc.h"  
#include <Jc/ReflectionJc.h>
#include <stddef.h>


extern_C const ClassJc reflection_ListItr_LinkedListJc;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_ObjectJc;  //used for field object

#define reflection_LinkedListJc_t reflection_LinkedListJc
extern_C const ClassJc reflection_LinkedListJc_t;  //used for field outer

#define reflection_ListMapEntryJc_t reflection_ListMapEntryJc
extern_C const ClassJc reflection_ListMapEntryJc_t;  //used for field lastReturned

#define reflection_ListMapEntryJc_t reflection_ListMapEntryJc
extern_C const ClassJc reflection_ListMapEntryJc_t;  //used for field next

const struct Reflection_Fields_ListItr_LinkedListJc_t
{ ObjectArrayJc head;
  FieldJc data[6];
} reflection_Fields_ListItr_LinkedListJc =
{ CONST_ObjectArrayJc(FieldJc, 6, OBJTYPE_FieldJc, null, &reflection_Fields_ListItr_LinkedListJc)
, { { "object"
    , 0   //no Array, no Bitfield
    , &reflection_ObjectJc                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((ListItr_LinkedListJc*)(0x1000))->object) -(int32)(ListItr_LinkedListJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_ListItr_LinkedListJc
    }
  , { "outer"
    , 0   //no Array, no Bitfield
    , &reflection_LinkedListJc_t                                                                                            
    , 0|mReference_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((ListItr_LinkedListJc*)(0x1000))->outer) -(int32)(ListItr_LinkedListJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_ListItr_LinkedListJc
    }
  , { "lastReturned"
    , 0   //no Array, no Bitfield
    , &reflection_ListMapEntryJc_t                                                                                            
    , 0|mReference_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((ListItr_LinkedListJc*)(0x1000))->lastReturned) -(int32)(ListItr_LinkedListJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_ListItr_LinkedListJc
    }
  , { "next"
    , 0   //no Array, no Bitfield
    , &reflection_ListMapEntryJc_t                                                                                            
    , 0|mReference_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((ListItr_LinkedListJc*)(0x1000))->next) -(int32)(ListItr_LinkedListJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_ListItr_LinkedListJc
    }
  , { "nextIndex"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((ListItr_LinkedListJc*)(0x1000))->nextIndex) -(int32)(ListItr_LinkedListJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_ListItr_LinkedListJc
    }
  , { "expectedModCount"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((ListItr_LinkedListJc*)(0x1000))->expectedModCount) -(int32)(ListItr_LinkedListJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_ListItr_LinkedListJc
    }
    
} }; 
                                                    

const ClassJc reflection_ListItr_LinkedListJc =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_ListItr_LinkedListJc, &reflection_ClassJc)
, "ListItr_LinkedListJc"
, 0
, sizeof(ListItr_LinkedListJc)
, (FieldJcArray const*)&reflection_Fields_ListItr_LinkedListJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};



extern_C const ClassJc reflection_LinkedListJcD;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_ListMapEntryJc;  //used for field header

const struct Reflection_Fields_LinkedListJcD_t
{ ObjectArrayJc head;
  FieldJc data[2];
} reflection_Fields_LinkedListJcD =
{ CONST_ObjectArrayJc(FieldJc, 2, OBJTYPE_FieldJc, null, &reflection_Fields_LinkedListJcD)
, { { "header"
    , 0   //no Array, no Bitfield
    , &reflection_ListMapEntryJc                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((LinkedListJcD*)(0x1000))->header) -(int32)(LinkedListJcD*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_LinkedListJcD
    }
  , { "size"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((LinkedListJcD*)(0x1000))->size) -(int32)(LinkedListJcD*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_LinkedListJcD
    }
    
} }; 
                                                    

const ClassJc reflection_LinkedListJcD =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_LinkedListJcD, &reflection_ClassJc)
, "LinkedListJcD"
, 0
, sizeof(LinkedListJcD)
, (FieldJcArray const*)&reflection_Fields_LinkedListJcD  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};



extern_C const ClassJc reflection_LinkedListJc;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_LinkedListJcD;  //used for field data
  

const struct SuperClasses_LinkedListJc_ClassOffset_idxMtblJcARRAY_t  //Type for the super class
{ ObjectArrayJc head;
  ClassOffset_idxMtblJc data[1];
}  superClasses_LinkedListJc =   //reflection instance for the super class
{ INITIALIZER_ObjectArrayJc(ClassOffset_idxMtblJc, 1, OBJTYPE_ClassOffset_idxMtblJc, null, &superClasses_LinkedListJc)
  , { &reflection_ListJc, 0} //TODO Index of mtbl of superclass
};

const struct Reflection_Fields_LinkedListJc_t
{ ObjectArrayJc head;
  FieldJc data[2];
} reflection_Fields_LinkedListJc =
{ CONST_ObjectArrayJc(FieldJc, 2, OBJTYPE_FieldJc, null, &reflection_Fields_LinkedListJc)
, { { "data"
    , 0   //no Array, no Bitfield
    , &reflection_LinkedListJcD                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((LinkedListJc*)(0x1000))->data) -(int32)(LinkedListJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_LinkedListJc
    }
    
} }; 
                                                    

const ClassJc reflection_LinkedListJc =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_LinkedListJc, &reflection_ClassJc)
, "LinkedListJc"
, 0
, sizeof(LinkedListJc)
, (FieldJcArray const*)&reflection_Fields_LinkedListJc  //attributes and associations
, null  //method      
, (ClassOffset_idxMtblJcARRAY*)&superClasses_LinkedListJc  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};

