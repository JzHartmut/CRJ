
    
//This file is generated by ZBNF/zbnfjax/jzTc/Cheader2Refl.jzTc
#include "Jc/ReflMemAccessJc.h"  
#include <Jc/ReflectionJc.h>
#include <stddef.h>


extern_C const ClassJc reflection_RemoteCpuJc;  //the just defined reflection_ used in the own fields.
const struct Reflection_Fields_RemoteCpuJc_t
{ ObjectArrayJc head;
  FieldJc data[1];
} reflection_Fields_RemoteCpuJc =
{ INIZ_ObjectArrayJc(reflection_Fields_RemoteCpuJc, 1, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "dummy"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((RemoteCpuJc*)(0x1000))->dummy)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_RemoteCpuJc
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_RemoteCpuJc =
{ INIZ_objReflId_ObjectJc(reflection_RemoteCpuJc, &reflection_ClassJc, INIZ_ID_ClassJc)
, "RemoteCpuJc"
, 0
, sizeof(RemoteCpuJc)
, (FieldJcArray const*)&reflection_Fields_RemoteCpuJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};



extern_C const ClassJc reflection_XXXBitfieldInfo_RemoteCpuJc_b;  //the just defined reflection_ used in the own fields.
const struct Reflection_Fields_XXXBitfieldInfo_RemoteCpuJc_b_t
{ ObjectArrayJc head;
  FieldJc data[3];
} reflection_Fields_XXXBitfieldInfo_RemoteCpuJc_b =
{ INIZ_ObjectArrayJc(reflection_Fields_XXXBitfieldInfo_RemoteCpuJc_b, 3, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "posBits"
    , (uint16)(0 + (12 << kBitNrofBitsInBitfield_FieldJc))                           
    , REFLECTION_BITFIELD                                                                                            
    , kBitfield_Modifier_reflectJc //bitModifiers
    , 0 + 0/* offset on bitfield: offset of element before + sizeof(element before) */
    , 0  //offsetToObjectifcBase
    , &reflection_XXXBitfieldInfo_RemoteCpuJc_b
    }
  , 
    { "nrofBits"
    , (uint16)(12 + (4 << kBitNrofBitsInBitfield_FieldJc))                           
    , REFLECTION_BITFIELD                                                                                            
    , kBitfield_Modifier_reflectJc //bitModifiers
    , 0 + 0/* offset on bitfield: offset of element before + sizeof(element before) */
    , 0  //offsetToObjectifcBase
    , &reflection_XXXBitfieldInfo_RemoteCpuJc_b
    }
  , 
    { "value"
    , (uint16)(16 + (16 << kBitNrofBitsInBitfield_FieldJc))                           
    , REFLECTION_BITFIELD                                                                                            
    , kBitfield_Modifier_reflectJc //bitModifiers
    , 0 + 0/* offset on bitfield: offset of element before + sizeof(element before) */
    , 0  //offsetToObjectifcBase
    , &reflection_XXXBitfieldInfo_RemoteCpuJc_b
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_XXXBitfieldInfo_RemoteCpuJc_b =
{ INIZ_objReflId_ObjectJc(reflection_XXXBitfieldInfo_RemoteCpuJc_b, &reflection_ClassJc, INIZ_ID_ClassJc)
, "XXXBitfieldInfo_RemoteCpuJc_b"
, 0
, sizeof(((XXXBitfieldInfo_RemoteCpuJc*)0x1000)->b)
, (FieldJcArray const*)&reflection_Fields_XXXBitfieldInfo_RemoteCpuJc_b  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};



extern_C const ClassJc reflection_XXXBitfieldInfo_RemoteCpuJc;  //the just defined reflection_ used in the own fields.
const struct Reflection_Fields_XXXBitfieldInfo_RemoteCpuJc_t
{ ObjectArrayJc head;
  FieldJc data[2];
} reflection_Fields_XXXBitfieldInfo_RemoteCpuJc =
{ INIZ_ObjectArrayJc(reflection_Fields_XXXBitfieldInfo_RemoteCpuJc, 2, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "allBits"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((XXXBitfieldInfo_RemoteCpuJc*)(0x1000))->allBits)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_XXXBitfieldInfo_RemoteCpuJc
    }
  , 
    { "b"
    , 0   //no Array, no Bitfield                           
    , &reflection_XXXBitfieldInfo_RemoteCpuJc_b                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((XXXBitfieldInfo_RemoteCpuJc*)(0x1000))->b)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_XXXBitfieldInfo_RemoteCpuJc
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_XXXBitfieldInfo_RemoteCpuJc =
{ INIZ_objReflId_ObjectJc(reflection_XXXBitfieldInfo_RemoteCpuJc, &reflection_ClassJc, INIZ_ID_ClassJc)
, "XXXBitfieldInfo_RemoteCpuJc"
, 0
, sizeof(XXXBitfieldInfo_RemoteCpuJc)
, (FieldJcArray const*)&reflection_Fields_XXXBitfieldInfo_RemoteCpuJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};



extern_C const ClassJc reflection_Access1TxData_ReflMemAccessJc;  //the just defined reflection_ used in the own fields.
const struct Reflection_Fields_Access1TxData_ReflMemAccessJc_t
{ ObjectArrayJc head;
  FieldJc data[3];
} reflection_Fields_Access1TxData_ReflMemAccessJc =
{ INIZ_ObjectArrayJc(reflection_Fields_Access1TxData_ReflMemAccessJc, 3, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "cmd"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((Access1TxData_ReflMemAccessJc*)(0x1000))->cmd)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_Access1TxData_ReflMemAccessJc
    }
  , 
    { "address"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((Access1TxData_ReflMemAccessJc*)(0x1000))->address)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_Access1TxData_ReflMemAccessJc
    }
  , 
    { "input"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((Access1TxData_ReflMemAccessJc*)(0x1000))->input)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_Access1TxData_ReflMemAccessJc
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_Access1TxData_ReflMemAccessJc =
{ INIZ_objReflId_ObjectJc(reflection_Access1TxData_ReflMemAccessJc, &reflection_ClassJc, INIZ_ID_ClassJc)
, "Access1TxData_ReflMemAccessJc"
, 0
, sizeof(Access1TxData_ReflMemAccessJc)
, (FieldJcArray const*)&reflection_Fields_Access1TxData_ReflMemAccessJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};



extern_C const ClassJc reflection_AccessTxData_ReflMemAccessJc;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_Access1TxData_ReflMemAccessJc;  //used for field data

const struct Reflection_Fields_AccessTxData_ReflMemAccessJc_t
{ ObjectArrayJc head;
  FieldJc data[3];
} reflection_Fields_AccessTxData_ReflMemAccessJc =
{ INIZ_ObjectArrayJc(reflection_Fields_AccessTxData_ReflMemAccessJc, 3, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "heartBeat"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((AccessTxData_ReflMemAccessJc*)(0x1000))->heartBeat)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_AccessTxData_ReflMemAccessJc
    }
  , 
    { "seqNrofData"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((AccessTxData_ReflMemAccessJc*)(0x1000))->seqNrofData)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_AccessTxData_ReflMemAccessJc
    }
  , 
    { "data"
    , 10 //nrofArrayElements                           
    , &reflection_Access1TxData_ReflMemAccessJc                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((AccessTxData_ReflMemAccessJc*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_AccessTxData_ReflMemAccessJc
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_AccessTxData_ReflMemAccessJc =
{ INIZ_objReflId_ObjectJc(reflection_AccessTxData_ReflMemAccessJc, &reflection_ClassJc, INIZ_ID_ClassJc)
, "AccessTxData_ReflMemAccessJc"
, 0
, sizeof(AccessTxData_ReflMemAccessJc)
, (FieldJcArray const*)&reflection_Fields_AccessTxData_ReflMemAccessJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};



extern_C const ClassJc reflection_Access1RxData_ReflMemAccessJc;  //the just defined reflection_ used in the own fields.
const struct Reflection_Fields_Access1RxData_ReflMemAccessJc_t
{ ObjectArrayJc head;
  FieldJc data[2];
} reflection_Fields_Access1RxData_ReflMemAccessJc =
{ INIZ_ObjectArrayJc(reflection_Fields_Access1RxData_ReflMemAccessJc, 2, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "lo"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((Access1RxData_ReflMemAccessJc*)(0x1000))->lo)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_Access1RxData_ReflMemAccessJc
    }
  , 
    { "hi"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((Access1RxData_ReflMemAccessJc*)(0x1000))->hi)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_Access1RxData_ReflMemAccessJc
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_Access1RxData_ReflMemAccessJc =
{ INIZ_objReflId_ObjectJc(reflection_Access1RxData_ReflMemAccessJc, &reflection_ClassJc, INIZ_ID_ClassJc)
, "Access1RxData_ReflMemAccessJc"
, 0
, sizeof(Access1RxData_ReflMemAccessJc)
, (FieldJcArray const*)&reflection_Fields_Access1RxData_ReflMemAccessJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};



extern_C const ClassJc reflection_AccessRxData_ReflMemAccessJc;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_Access1RxData_ReflMemAccessJc;  //used for field data

const struct Reflection_Fields_AccessRxData_ReflMemAccessJc_t
{ ObjectArrayJc head;
  FieldJc data[3];
} reflection_Fields_AccessRxData_ReflMemAccessJc =
{ INIZ_ObjectArrayJc(reflection_Fields_AccessRxData_ReflMemAccessJc, 3, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "heartBeat"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((AccessRxData_ReflMemAccessJc*)(0x1000))->heartBeat)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_AccessRxData_ReflMemAccessJc
    }
  , 
    { "seqNrofData"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((AccessRxData_ReflMemAccessJc*)(0x1000))->seqNrofData)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_AccessRxData_ReflMemAccessJc
    }
  , 
    { "data"
    , 10 //nrofArrayElements                           
    , &reflection_Access1RxData_ReflMemAccessJc                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((AccessRxData_ReflMemAccessJc*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_AccessRxData_ReflMemAccessJc
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_AccessRxData_ReflMemAccessJc =
{ INIZ_objReflId_ObjectJc(reflection_AccessRxData_ReflMemAccessJc, &reflection_ClassJc, INIZ_ID_ClassJc)
, "AccessRxData_ReflMemAccessJc"
, 0
, sizeof(AccessRxData_ReflMemAccessJc)
, (FieldJcArray const*)&reflection_Fields_AccessRxData_ReflMemAccessJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};



extern_C const ClassJc reflection_MemAccessDebugJc;  //the just defined reflection_ used in the own fields.
const struct Reflection_Fields_MemAccessDebugJc_t
{ ObjectArrayJc head;
  FieldJc data[4];
} reflection_Fields_MemAccessDebugJc =
{ INIZ_ObjectArrayJc(reflection_Fields_MemAccessDebugJc, 4, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "cmd"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((MemAccessDebugJc*)(0x1000))->cmd)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_MemAccessDebugJc
    }
  , 
    { "address"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((MemAccessDebugJc*)(0x1000))->address)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_MemAccessDebugJc
    }
  , 
    { "input"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((MemAccessDebugJc*)(0x1000))->input)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_MemAccessDebugJc
    }
  , 
    { "output"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((MemAccessDebugJc*)(0x1000))->output)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_MemAccessDebugJc
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_MemAccessDebugJc =
{ INIZ_objReflId_ObjectJc(reflection_MemAccessDebugJc, &reflection_ClassJc, INIZ_ID_ClassJc)
, "MemAccessDebugJc"
, 0
, sizeof(MemAccessDebugJc)
, (FieldJcArray const*)&reflection_Fields_MemAccessDebugJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};



extern_C const ClassJc reflection_MemAccessArrayDebugJc;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_MemAccessDebugJc;  //used for field item

const struct Reflection_Fields_MemAccessArrayDebugJc_t
{ ObjectArrayJc head;
  FieldJc data[2];
} reflection_Fields_MemAccessArrayDebugJc =
{ INIZ_ObjectArrayJc(reflection_Fields_MemAccessArrayDebugJc, 2, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "ix"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((MemAccessArrayDebugJc*)(0x1000))->ix)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_MemAccessArrayDebugJc
    }
  , 
    { "item"
    , 20 //nrofArrayElements                           
    , &reflection_MemAccessDebugJc                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((MemAccessArrayDebugJc*)(0x1000))->item)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_MemAccessArrayDebugJc
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_MemAccessArrayDebugJc =
{ INIZ_objReflId_ObjectJc(reflection_MemAccessArrayDebugJc, &reflection_ClassJc, INIZ_ID_ClassJc)
, "MemAccessArrayDebugJc"
, 0
, sizeof(MemAccessArrayDebugJc)
, (FieldJcArray const*)&reflection_Fields_MemAccessArrayDebugJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};

