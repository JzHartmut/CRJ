
    
//This file is generated by ZBNF/zbnfjax/jzTc/Cheader2Refl.jzTc
#include "Jc/ReflMemAccessJc.h"  
#include <Jc/ReflectionJc.h>
#include <stddef.h>


extern_C const ClassJc reflection_RemoteCpuJc;  //the just defined reflection_ used in the own fields.
const struct Reflection_Fields_RemoteCpuJc_t
{ ObjectArrayJc head;
  FieldJc data[1];
} reflection_Fields_RemoteCpuJc =
{ CONST_ObjectArrayJc(FieldJc, 1, OBJTYPE_FieldJc, null, &reflection_Fields_RemoteCpuJc)
, { { "dummy"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((RemoteCpuJc*)(0x1000))->dummy) -(int32)(RemoteCpuJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_RemoteCpuJc
    }
    
} }; 
                                                    

const ClassJc reflection_RemoteCpuJc =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_RemoteCpuJc, &reflection_ClassJc)
, "RemoteCpuJc"
, 0
, sizeof(RemoteCpuJc)
, (FieldJcArray const*)&reflection_Fields_RemoteCpuJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};



extern_C const ClassJc reflection_Access1TxData_ReflMemAccessJc;  //the just defined reflection_ used in the own fields.
const struct Reflection_Fields_Access1TxData_ReflMemAccessJc_t
{ ObjectArrayJc head;
  FieldJc data[3];
} reflection_Fields_Access1TxData_ReflMemAccessJc =
{ CONST_ObjectArrayJc(FieldJc, 3, OBJTYPE_FieldJc, null, &reflection_Fields_Access1TxData_ReflMemAccessJc)
, { { "cmd"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((Access1TxData_ReflMemAccessJc*)(0x1000))->cmd) -(int32)(Access1TxData_ReflMemAccessJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_Access1TxData_ReflMemAccessJc
    }
  , { "address"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((Access1TxData_ReflMemAccessJc*)(0x1000))->address) -(int32)(Access1TxData_ReflMemAccessJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_Access1TxData_ReflMemAccessJc
    }
  , { "input"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((Access1TxData_ReflMemAccessJc*)(0x1000))->input) -(int32)(Access1TxData_ReflMemAccessJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_Access1TxData_ReflMemAccessJc
    }
    
} }; 
                                                    

const ClassJc reflection_Access1TxData_ReflMemAccessJc =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_Access1TxData_ReflMemAccessJc, &reflection_ClassJc)
, "Access1TxData_ReflMemAccessJc"
, 0
, sizeof(Access1TxData_ReflMemAccessJc)
, (FieldJcArray const*)&reflection_Fields_Access1TxData_ReflMemAccessJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};



extern_C const ClassJc reflection_AccessTxData_ReflMemAccessJc;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_Access1TxData_ReflMemAccessJc;  //used for field data

const struct Reflection_Fields_AccessTxData_ReflMemAccessJc_t
{ ObjectArrayJc head;
  FieldJc data[6];
} reflection_Fields_AccessTxData_ReflMemAccessJc =
{ CONST_ObjectArrayJc(FieldJc, 6, OBJTYPE_FieldJc, null, &reflection_Fields_AccessTxData_ReflMemAccessJc)
, { { "heartBeat"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((AccessTxData_ReflMemAccessJc*)(0x1000))->heartBeat) -(int32)(AccessTxData_ReflMemAccessJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_AccessTxData_ReflMemAccessJc
    }
  , { "seqNrofData"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((AccessTxData_ReflMemAccessJc*)(0x1000))->seqNrofData) -(int32)(AccessTxData_ReflMemAccessJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_AccessTxData_ReflMemAccessJc
    }
  , { "data"
    , 10 //nrofArrayElements
    , &reflection_Access1TxData_ReflMemAccessJc                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((AccessTxData_ReflMemAccessJc*)(0x1000))->data) -(int32)(AccessTxData_ReflMemAccessJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_AccessTxData_ReflMemAccessJc
    }
    
} }; 
                                                    

const ClassJc reflection_AccessTxData_ReflMemAccessJc =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_AccessTxData_ReflMemAccessJc, &reflection_ClassJc)
, "AccessTxData_ReflMemAccessJc"
, 0
, sizeof(AccessTxData_ReflMemAccessJc)
, (FieldJcArray const*)&reflection_Fields_AccessTxData_ReflMemAccessJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};



extern_C const ClassJc reflection_Access1RxData_ReflMemAccessJc;  //the just defined reflection_ used in the own fields.
const struct Reflection_Fields_Access1RxData_ReflMemAccessJc_t
{ ObjectArrayJc head;
  FieldJc data[2];
} reflection_Fields_Access1RxData_ReflMemAccessJc =
{ CONST_ObjectArrayJc(FieldJc, 2, OBJTYPE_FieldJc, null, &reflection_Fields_Access1RxData_ReflMemAccessJc)
, { { "lo"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((Access1RxData_ReflMemAccessJc*)(0x1000))->lo) -(int32)(Access1RxData_ReflMemAccessJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_Access1RxData_ReflMemAccessJc
    }
  , { "hi"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((Access1RxData_ReflMemAccessJc*)(0x1000))->hi) -(int32)(Access1RxData_ReflMemAccessJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_Access1RxData_ReflMemAccessJc
    }
    
} }; 
                                                    

const ClassJc reflection_Access1RxData_ReflMemAccessJc =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_Access1RxData_ReflMemAccessJc, &reflection_ClassJc)
, "Access1RxData_ReflMemAccessJc"
, 0
, sizeof(Access1RxData_ReflMemAccessJc)
, (FieldJcArray const*)&reflection_Fields_Access1RxData_ReflMemAccessJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};



extern_C const ClassJc reflection_AccessRxData_ReflMemAccessJc;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_Access1RxData_ReflMemAccessJc;  //used for field data

const struct Reflection_Fields_AccessRxData_ReflMemAccessJc_t
{ ObjectArrayJc head;
  FieldJc data[4];
} reflection_Fields_AccessRxData_ReflMemAccessJc =
{ CONST_ObjectArrayJc(FieldJc, 4, OBJTYPE_FieldJc, null, &reflection_Fields_AccessRxData_ReflMemAccessJc)
, { { "heartBeat"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((AccessRxData_ReflMemAccessJc*)(0x1000))->heartBeat) -(int32)(AccessRxData_ReflMemAccessJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_AccessRxData_ReflMemAccessJc
    }
  , { "seqNrofData"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((AccessRxData_ReflMemAccessJc*)(0x1000))->seqNrofData) -(int32)(AccessRxData_ReflMemAccessJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_AccessRxData_ReflMemAccessJc
    }
  , { "data"
    , 10 //nrofArrayElements
    , &reflection_Access1RxData_ReflMemAccessJc                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((AccessRxData_ReflMemAccessJc*)(0x1000))->data) -(int32)(AccessRxData_ReflMemAccessJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_AccessRxData_ReflMemAccessJc
    }
    
} }; 
                                                    

const ClassJc reflection_AccessRxData_ReflMemAccessJc =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_AccessRxData_ReflMemAccessJc, &reflection_ClassJc)
, "AccessRxData_ReflMemAccessJc"
, 0
, sizeof(AccessRxData_ReflMemAccessJc)
, (FieldJcArray const*)&reflection_Fields_AccessRxData_ReflMemAccessJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};



extern_C const ClassJc reflection_MemAccessDebugJc;  //the just defined reflection_ used in the own fields.
const struct Reflection_Fields_MemAccessDebugJc_t
{ ObjectArrayJc head;
  FieldJc data[4];
} reflection_Fields_MemAccessDebugJc =
{ CONST_ObjectArrayJc(FieldJc, 4, OBJTYPE_FieldJc, null, &reflection_Fields_MemAccessDebugJc)
, { { "cmd"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((MemAccessDebugJc*)(0x1000))->cmd) -(int32)(MemAccessDebugJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_MemAccessDebugJc
    }
  , { "address"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((MemAccessDebugJc*)(0x1000))->address) -(int32)(MemAccessDebugJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_MemAccessDebugJc
    }
  , { "input"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((MemAccessDebugJc*)(0x1000))->input) -(int32)(MemAccessDebugJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_MemAccessDebugJc
    }
  , { "output"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((MemAccessDebugJc*)(0x1000))->output) -(int32)(MemAccessDebugJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_MemAccessDebugJc
    }
    
} }; 
                                                    

const ClassJc reflection_MemAccessDebugJc =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_MemAccessDebugJc, &reflection_ClassJc)
, "MemAccessDebugJc"
, 0
, sizeof(MemAccessDebugJc)
, (FieldJcArray const*)&reflection_Fields_MemAccessDebugJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};



extern_C const ClassJc reflection_MemAccessArrayDebugJc;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_MemAccessDebugJc;  //used for field item

const struct Reflection_Fields_MemAccessArrayDebugJc_t
{ ObjectArrayJc head;
  FieldJc data[2];
} reflection_Fields_MemAccessArrayDebugJc =
{ CONST_ObjectArrayJc(FieldJc, 2, OBJTYPE_FieldJc, null, &reflection_Fields_MemAccessArrayDebugJc)
, { { "ix"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((MemAccessArrayDebugJc*)(0x1000))->ix) -(int32)(MemAccessArrayDebugJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_MemAccessArrayDebugJc
    }
  , { "item"
    , 20 //nrofArrayElements
    , &reflection_MemAccessDebugJc                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((MemAccessArrayDebugJc*)(0x1000))->item) -(int32)(MemAccessArrayDebugJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_MemAccessArrayDebugJc
    }
    
} }; 
                                                    

const ClassJc reflection_MemAccessArrayDebugJc =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_MemAccessArrayDebugJc, &reflection_ClassJc)
, "MemAccessArrayDebugJc"
, 0
, sizeof(MemAccessArrayDebugJc)
, (FieldJcArray const*)&reflection_Fields_MemAccessArrayDebugJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};

