
    
//This file is generated by ZBNF/zbnfjax/jzTc/Cheader2Refl.jzTc
#include "Jc/DateJc.h"  
#include <Jc/ReflectionJc.h>
#include <stddef.h>


extern_C const ClassJc reflection_DateValuesJc;  //the just defined reflection_ used in the own fields.
const struct Reflection_Fields_DateValuesJc_t
{ ObjectArrayJc head;
  FieldJc data[4];
} reflection_Fields_DateValuesJc =
{ CONST_ObjectArrayJc(FieldJc, 4, OBJTYPE_FieldJc, null, &reflection_Fields_DateValuesJc)
, { { "time_nsec"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((DateValuesJc*)(0x1000))->time_nsec) -(int32)(DateValuesJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_DateValuesJc
    }
  , { "time_sec"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((DateValuesJc*)(0x1000))->time_sec) -(int32)(DateValuesJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_DateValuesJc
    }
    
} }; 
                                                    

const ClassJc reflection_DateValuesJc =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_DateValuesJc, &reflection_ClassJc)
, "DateValuesJc"
, 0
, sizeof(DateValuesJc)
, (FieldJcArray const*)&reflection_Fields_DateValuesJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};



extern_C const ClassJc reflection_DateJc_s;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_OS_TimeStamp;  //used for field val
  

const struct SuperClasses_DateJc_s_ClassOffset_idxMtblJcARRAY_t  //Type for the super class
{ ObjectArrayJc head;
  ClassOffset_idxMtblJc data[1];
}  superClasses_DateJc_s =   //reflection instance for the super class
{ INITIALIZER_ObjectArrayJc(ClassOffset_idxMtblJc, 1, OBJTYPE_ClassOffset_idxMtblJc, null, &superClasses_DateJc_s)
  , { &reflection_ObjectJc, 0} //TODO Index of mtbl of superclass
};

const struct Reflection_Fields_DateJc_s_t
{ ObjectArrayJc head;
  FieldJc data[2];
} reflection_Fields_DateJc_s =
{ CONST_ObjectArrayJc(FieldJc, 2, OBJTYPE_FieldJc, null, &reflection_Fields_DateJc_s)
, { { "val"
    , 0   //no Array, no Bitfield
    , &reflection_OS_TimeStamp                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((DateJc_s*)(0x1000))->val) -(int32)(DateJc_s*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_DateJc_s
    }
    
} }; 
                                                    

const ClassJc reflection_DateJc_s =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_DateJc_s, &reflection_ClassJc)
, "DateJc_s"
, 0
, sizeof(DateJc_s)
, (FieldJcArray const*)&reflection_Fields_DateJc_s  //attributes and associations
, null  //method      
, (ClassOffset_idxMtblJcARRAY*)&superClasses_DateJc_s  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};



extern_C const ClassJc reflection_SimpleDateFormatJc_s;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_StringJc;  //used for field sFormat
  

const struct SuperClasses_SimpleDateFormatJc_s_ClassOffset_idxMtblJcARRAY_t  //Type for the super class
{ ObjectArrayJc head;
  ClassOffset_idxMtblJc data[1];
}  superClasses_SimpleDateFormatJc_s =   //reflection instance for the super class
{ INITIALIZER_ObjectArrayJc(ClassOffset_idxMtblJc, 1, OBJTYPE_ClassOffset_idxMtblJc, null, &superClasses_SimpleDateFormatJc_s)
  , { &reflection_ObjectJc, 0} //TODO Index of mtbl of superclass
};

const struct Reflection_Fields_SimpleDateFormatJc_s_t
{ ObjectArrayJc head;
  FieldJc data[3];
} reflection_Fields_SimpleDateFormatJc_s =
{ CONST_ObjectArrayJc(FieldJc, 3, OBJTYPE_FieldJc, null, &reflection_Fields_SimpleDateFormatJc_s)
, { { "sFormat"
    , 0   //no Array, no Bitfield
    , &reflection_StringJc                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((SimpleDateFormatJc_s*)(0x1000))->sFormat) -(int32)(SimpleDateFormatJc_s*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_SimpleDateFormatJc_s
    }
  , { "timeZoneAdjustHours"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((SimpleDateFormatJc_s*)(0x1000))->timeZoneAdjustHours) -(int32)(SimpleDateFormatJc_s*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_SimpleDateFormatJc_s
    }
    
} }; 
                                                    

const ClassJc reflection_SimpleDateFormatJc_s =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_SimpleDateFormatJc_s, &reflection_ClassJc)
, "SimpleDateFormatJc_s"
, 0
, sizeof(SimpleDateFormatJc_s)
, (FieldJcArray const*)&reflection_Fields_SimpleDateFormatJc_s  //attributes and associations
, null  //method      
, (ClassOffset_idxMtblJcARRAY*)&superClasses_SimpleDateFormatJc_s  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};



extern_C const ClassJc reflection_TextFieldPositionJc_s;  //the just defined reflection_ used in the own fields.  

const struct SuperClasses_TextFieldPositionJc_s_ClassOffset_idxMtblJcARRAY_t  //Type for the super class
{ ObjectArrayJc head;
  ClassOffset_idxMtblJc data[1];
}  superClasses_TextFieldPositionJc_s =   //reflection instance for the super class
{ INITIALIZER_ObjectArrayJc(ClassOffset_idxMtblJc, 1, OBJTYPE_ClassOffset_idxMtblJc, null, &superClasses_TextFieldPositionJc_s)
  , { &reflection_ObjectJc, 0} //TODO Index of mtbl of superclass
};

const struct Reflection_Fields_TextFieldPositionJc_s_t
{ ObjectArrayJc head;
  FieldJc data[2];
} reflection_Fields_TextFieldPositionJc_s =
{ CONST_ObjectArrayJc(FieldJc, 2, OBJTYPE_FieldJc, null, &reflection_Fields_TextFieldPositionJc_s)
, { { "x"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((TextFieldPositionJc_s*)(0x1000))->x) -(int32)(TextFieldPositionJc_s*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_TextFieldPositionJc_s
    }
    
} }; 
                                                    

const ClassJc reflection_TextFieldPositionJc_s =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_TextFieldPositionJc_s, &reflection_ClassJc)
, "TextFieldPositionJc_s"
, 0
, sizeof(TextFieldPositionJc_s)
, (FieldJcArray const*)&reflection_Fields_TextFieldPositionJc_s  //attributes and associations
, null  //method      
, (ClassOffset_idxMtblJcARRAY*)&superClasses_TextFieldPositionJc_s  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};

