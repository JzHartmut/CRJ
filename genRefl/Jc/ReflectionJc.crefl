
    
//This file is generated by ZBNF/zbnfjax/jzTc/Cheader2Refl.jzTc
#include "Jc/ReflectionJc.h"  
#include <Jc/ReflectionJc.h>
#include <stddef.h>


extern_C const ClassJc reflection_FieldJc;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_u_int16_t;  //used for field nrofArrayElementsOrBitfield_

#define reflection_ClassJc_t reflection_ClassJc
extern_C const ClassJc reflection_ClassJc_t;  //used for field type_

#define reflection_ClassJc_t reflection_ClassJc
extern_C const ClassJc reflection_ClassJc_t;  //used for field declaringClass

const struct Reflection_Fields_FieldJc_t
{ ObjectArrayJc head;
  FieldJc data[10];
} reflection_Fields_FieldJc =
{ CONST_ObjectArrayJc(FieldJc, 10, OBJTYPE_FieldJc, null, &reflection_Fields_FieldJc)
, { { "name"
    , 30 //nrofArrayElements
    , REFLECTION_int8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) | kStaticArray_Modifier_reflectJc|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((FieldJc*)(0x1000))->name) -(int32)(FieldJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_FieldJc
    }
  , { "nrofArrayElementsOrBitfield_"
    , 0   //no Array, no Bitfield
    , &reflection_u_int16_t                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((FieldJc*)(0x1000))->nrofArrayElementsOrBitfield_) -(int32)(FieldJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_FieldJc
    }
  , { "type_"
    , 0   //no Array, no Bitfield
    , &reflection_ClassJc_t                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((FieldJc*)(0x1000))->type_) -(int32)(FieldJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_FieldJc
    }
  , { "bitModifiers"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((FieldJc*)(0x1000))->bitModifiers) -(int32)(FieldJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_FieldJc
    }
  , { "position"
    , 0   //no Array, no Bitfield
    , REFLECTION_int16                                                                                            
    , (2<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((FieldJc*)(0x1000))->position) -(int32)(FieldJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_FieldJc
    }
  , { "offsetToObjectifcBase"
    , 0   //no Array, no Bitfield
    , REFLECTION_int16                                                                                            
    , (2<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((FieldJc*)(0x1000))->offsetToObjectifcBase) -(int32)(FieldJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_FieldJc
    }
  , { "declaringClass"
    , 0   //no Array, no Bitfield
    , &reflection_ClassJc_t                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((FieldJc*)(0x1000))->declaringClass) -(int32)(FieldJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_FieldJc
    }
    
} }; 
                                                    

const ClassJc reflection_FieldJc =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_FieldJc, &reflection_ClassJc)
, "FieldJc"
, 0
, sizeof(FieldJc)
, (FieldJcArray const*)&reflection_Fields_FieldJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};



extern_C const ClassJc reflection_FieldJc_Y;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_ObjectArrayJc;  //used for field head

extern_C const ClassJc reflection_FieldJc;  //used for field data

const struct Reflection_Fields_FieldJc_Y_t
{ ObjectArrayJc head;
  FieldJc data[3];
} reflection_Fields_FieldJc_Y =
{ CONST_ObjectArrayJc(FieldJc, 3, OBJTYPE_FieldJc, null, &reflection_Fields_FieldJc_Y)
, { { "head"
    , 0   //no Array, no Bitfield
    , &reflection_ObjectArrayJc                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((FieldJc_Y*)(0x1000))->head) -(int32)(FieldJc_Y*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_FieldJc_Y
    }
  , { "data"
    , 0   //no Array, no Bitfield
    , &reflection_FieldJc                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((FieldJc_Y*)(0x1000))->data) -(int32)(FieldJc_Y*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_FieldJc_Y
    }
    
} }; 
                                                    

const ClassJc reflection_FieldJc_Y =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_FieldJc_Y, &reflection_ClassJc)
, "FieldJc_Y"
, 0
, sizeof(FieldJc_Y)
, (FieldJcArray const*)&reflection_Fields_FieldJc_Y  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};



extern_C const ClassJc reflection_MethodJc;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_Object__VoidMethod;  //used for field adress

extern_C const ClassJc reflection_Type_MethodJc;  //used for field eType

const struct Reflection_Fields_MethodJc_t
{ ObjectArrayJc head;
  FieldJc data[4];
} reflection_Fields_MethodJc =
{ CONST_ObjectArrayJc(FieldJc, 4, OBJTYPE_FieldJc, null, &reflection_Fields_MethodJc)
, { { "name"
    , 32 //nrofArrayElements
    , REFLECTION_int8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) | kStaticArray_Modifier_reflectJc|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((MethodJc*)(0x1000))->name) -(int32)(MethodJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_MethodJc
    }
  , { "bModifiers"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((MethodJc*)(0x1000))->bModifiers) -(int32)(MethodJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_MethodJc
    }
  , { "adress"
    , 0   //no Array, no Bitfield
    , &reflection_Object__VoidMethod                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((MethodJc*)(0x1000))->adress) -(int32)(MethodJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_MethodJc
    }
  , { "eType"
    , 0   //no Array, no Bitfield
    , &reflection_Type_MethodJc                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((MethodJc*)(0x1000))->eType) -(int32)(MethodJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_MethodJc
    }
    
} }; 
                                                    

const ClassJc reflection_MethodJc =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_MethodJc, &reflection_ClassJc)
, "MethodJc"
, 0
, sizeof(MethodJc)
, (FieldJcArray const*)&reflection_Fields_MethodJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};



extern_C const ClassJc reflection_MethodJcARRAY;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_ObjectArrayJc;  //used for field head

extern_C const ClassJc reflection_MethodJc;  //used for field fields

const struct Reflection_Fields_MethodJcARRAY_t
{ ObjectArrayJc head;
  FieldJc data[2];
} reflection_Fields_MethodJcARRAY =
{ CONST_ObjectArrayJc(FieldJc, 2, OBJTYPE_FieldJc, null, &reflection_Fields_MethodJcARRAY)
, { { "head"
    , 0   //no Array, no Bitfield
    , &reflection_ObjectArrayJc                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((MethodJcARRAY*)(0x1000))->head) -(int32)(MethodJcARRAY*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_MethodJcARRAY
    }
  , { "fields"
    , 10 //nrofArrayElements
    , &reflection_MethodJc                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((MethodJcARRAY*)(0x1000))->fields) -(int32)(MethodJcARRAY*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_MethodJcARRAY
    }
    
} }; 
                                                    

const ClassJc reflection_MethodJcARRAY =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_MethodJcARRAY, &reflection_ClassJc)
, "MethodJcARRAY"
, 0
, sizeof(MethodJcARRAY)
, (FieldJcArray const*)&reflection_Fields_MethodJcARRAY  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};



extern_C const ClassJc reflection_ClassJc_YP;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_ObjectArrayJc;  //used for field head

extern_C const ClassJc reflection_ClassJc;  //used for field data

const struct Reflection_Fields_ClassJc_YP_t
{ ObjectArrayJc head;
  FieldJc data[2];
} reflection_Fields_ClassJc_YP =
{ CONST_ObjectArrayJc(FieldJc, 2, OBJTYPE_FieldJc, null, &reflection_Fields_ClassJc_YP)
, { { "head"
    , 0   //no Array, no Bitfield
    , &reflection_ObjectArrayJc                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((ClassJc_YP*)(0x1000))->head) -(int32)(ClassJc_YP*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_ClassJc_YP
    }
  , { "data"
    , 10 //nrofArrayElements
    , &reflection_ClassJc                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((ClassJc_YP*)(0x1000))->data) -(int32)(ClassJc_YP*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_ClassJc_YP
    }
    
} }; 
                                                    

const ClassJc reflection_ClassJc_YP =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_ClassJc_YP, &reflection_ClassJc)
, "ClassJc_YP"
, 0
, sizeof(ClassJc_YP)
, (FieldJcArray const*)&reflection_Fields_ClassJc_YP  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};



extern_C const ClassJc reflection_Reflection__ObjectJc;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_ClassJc;  //used for field clazz

extern_C const ClassJc reflection_MT_void_Method_void;  //used for field vtbl

const struct Reflection_Fields_Reflection__ObjectJc_t
{ ObjectArrayJc head;
  FieldJc data[2];
} reflection_Fields_Reflection__ObjectJc =
{ CONST_ObjectArrayJc(FieldJc, 2, OBJTYPE_FieldJc, null, &reflection_Fields_Reflection__ObjectJc)
, { { "clazz"
    , 0   //no Array, no Bitfield
    , &reflection_ClassJc                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((Reflection__ObjectJc*)(0x1000))->clazz) -(int32)(Reflection__ObjectJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_Reflection__ObjectJc
    }
  , { "vtbl"
    , 5 //nrofArrayElements
    , &reflection_MT_void_Method_void                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((Reflection__ObjectJc*)(0x1000))->vtbl) -(int32)(Reflection__ObjectJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_Reflection__ObjectJc
    }
    
} }; 
                                                    

const ClassJc reflection_Reflection__ObjectJc =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_Reflection__ObjectJc, &reflection_ClassJc)
, "Reflection__ObjectJc"
, 0
, sizeof(Reflection__ObjectJc)
, (FieldJcArray const*)&reflection_Fields_Reflection__ObjectJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};



extern_C const ClassJc reflection_ExtReflectionJc_s;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_MemC;  //used for field extReflectionBuffer

#define reflection_Data_ExtReflectionJc_t reflection_Data_ExtReflectionJc
extern_C const ClassJc reflection_Data_ExtReflectionJc_t;  //used for field extReflectionData

extern_C const ClassJc reflection_ClassJc_YP;  //used for field extReflection

const struct Reflection_Fields_ExtReflectionJc_s_t
{ ObjectArrayJc head;
  FieldJc data[5];
} reflection_Fields_ExtReflectionJc_s =
{ CONST_ObjectArrayJc(FieldJc, 5, OBJTYPE_FieldJc, null, &reflection_Fields_ExtReflectionJc_s)
, { { "ct"
    , 0   //no Array, no Bitfield
    , REFLECTION_int16                                                                                            
    , (2<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((ExtReflectionJc_s*)(0x1000))->ct) -(int32)(ExtReflectionJc_s*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_ExtReflectionJc_s
    }
  , { "errorRelocationExtRefl"
    , 0   //no Array, no Bitfield
    , REFLECTION_int16                                                                                            
    , (2<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((ExtReflectionJc_s*)(0x1000))->errorRelocationExtRefl) -(int32)(ExtReflectionJc_s*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_ExtReflectionJc_s
    }
  , { "extReflectionBuffer"
    , 0   //no Array, no Bitfield
    , &reflection_MemC                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((ExtReflectionJc_s*)(0x1000))->extReflectionBuffer) -(int32)(ExtReflectionJc_s*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_ExtReflectionJc_s
    }
  , { "extReflectionData"
    , 0   //no Array, no Bitfield
    , &reflection_Data_ExtReflectionJc_t                                                                                            
    , 0|mReference_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((ExtReflectionJc_s*)(0x1000))->extReflectionData) -(int32)(ExtReflectionJc_s*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_ExtReflectionJc_s
    }
  , { "extReflection"
    , 0   //no Array, no Bitfield
    , &reflection_ClassJc_YP                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((ExtReflectionJc_s*)(0x1000))->extReflection) -(int32)(ExtReflectionJc_s*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_ExtReflectionJc_s
    }
    
} }; 
                                                    

const ClassJc reflection_ExtReflectionJc_s =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_ExtReflectionJc_s, &reflection_ClassJc)
, "ExtReflectionJc_s"
, 0
, sizeof(ExtReflectionJc_s)
, (FieldJcArray const*)&reflection_Fields_ExtReflectionJc_s  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};



extern_C const ClassJc reflection_Data_ExtReflectionJc;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_ObjectJc;  //used for field object

extern_C const ClassJc reflection_ClassJc_YP;  //used for field arrayClasses

extern_C const ClassJc reflection_ClassJc;  //used for field classDataBlock

const struct Reflection_Fields_Data_ExtReflectionJc_t
{ ObjectArrayJc head;
  FieldJc data[6];
} reflection_Fields_Data_ExtReflectionJc =
{ CONST_ObjectArrayJc(FieldJc, 6, OBJTYPE_FieldJc, null, &reflection_Fields_Data_ExtReflectionJc)
, { { "object"
    , 0   //no Array, no Bitfield
    , &reflection_ObjectJc                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((Data_ExtReflectionJc*)(0x1000))->object) -(int32)(Data_ExtReflectionJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_Data_ExtReflectionJc
    }
  , { "sign"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((Data_ExtReflectionJc*)(0x1000))->sign) -(int32)(Data_ExtReflectionJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_Data_ExtReflectionJc
    }
  , { "nrofRelocEntries"
    , 0   //no Array, no Bitfield
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)((int32)(&((Data_ExtReflectionJc*)(0x1000))->nrofRelocEntries) -(int32)(Data_ExtReflectionJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_Data_ExtReflectionJc
    }
  , { "arrayClasses"
    , 0   //no Array, no Bitfield
    , &reflection_ClassJc_YP                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((Data_ExtReflectionJc*)(0x1000))->arrayClasses) -(int32)(Data_ExtReflectionJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_Data_ExtReflectionJc
    }
  , { "classDataBlock"
    , 0   //no Array, no Bitfield
    , &reflection_ClassJc                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((Data_ExtReflectionJc*)(0x1000))->classDataBlock) -(int32)(Data_ExtReflectionJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_Data_ExtReflectionJc
    }
  , { "relocateAddr"
    , 10 //nrofArrayElements
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) | kStaticArray_Modifier_reflectJc|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)((int32)(&((Data_ExtReflectionJc*)(0x1000))->relocateAddr) -(int32)(Data_ExtReflectionJc*)0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_Data_ExtReflectionJc
    }
    
} }; 
                                                    

const ClassJc reflection_Data_ExtReflectionJc =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_Data_ExtReflectionJc, &reflection_ClassJc)
, "Data_ExtReflectionJc"
, 0
, sizeof(Data_ExtReflectionJc)
, (FieldJcArray const*)&reflection_Fields_Data_ExtReflectionJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};

