
    
//This file is generated by ZBNF/zbnfjax/jzTc/Cheader2Refl.jzTc
#include "Jc/ThreadJc.h"  
#include <Jc/ReflectionJc.h>
#include <stddef.h>


extern_C const ClassJc reflection_RunnableJc_s;  //the just defined reflection_ used in the own fields.  

const struct SuperClasses_RunnableJc_s_ClassOffset_idxMtblJcARRAY_t  //Type for the super class
{ ObjectArrayJc head;
  ClassOffset_idxMtblJc data[1];
}  superClasses_RunnableJc_s =   //reflection instance for the super class
{ INIZ_ObjectArrayJc(superClasses_RunnableJc_s, 1, ClassOffset_idxMtblJc, null, INIZ_ID_ClassOffset_idxMtblJc)
  , { &reflection_ObjectJc                                   
    , 0 //TODO Index of mtbl of superclass
      //The field which presents the superclass data in inspector access.
    , { "object"     
      , 0 //arraysize
      , &reflection_ObjectJc  //type of super                                                                                         
      , kEmbeddedContainer_Modifier_reflectJc //hint: embd helps to show the real type.
      , 0 //offsetalways 0 (C++?)
      , 0  //offsetToObjectifcBase
      , &reflection_ObjectJc  
      }
    }
};
                                                                   
const ClassJc reflection_RunnableJc_s =
{ INIZ_objReflId_ObjectJc(reflection_RunnableJc_s, &reflection_ClassJc, INIZ_ID_ClassJc)
, "RunnableJc_s"
, 0
, sizeof(RunnableJc_s)
, null  //attributes and associations
, null  //method      
, (ClassOffset_idxMtblJcARRAY*)&superClasses_RunnableJc_s  //superclass  
, null  //interfaces  
, mObjectJc_Modifier_reflectJc   
, null  //virtual table
};



extern_C const ClassJc reflection_RunnableJc_Y;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_ObjectArrayJc;  //used for field head

extern_C const ClassJc reflection_RunnableJc_s;  //used for field data

const struct Reflection_Fields_RunnableJc_Y_t
{ ObjectArrayJc head;
  FieldJc data[2];
} reflection_Fields_RunnableJc_Y =
{ INIZ_ObjectArrayJc(reflection_Fields_RunnableJc_Y, 2, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "head"
    , 0   //no Array, no Bitfield                           
    , &reflection_ObjectArrayJc                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((RunnableJc_Y*)(0x1000))->head)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_RunnableJc_Y
    }
  , 
    { "data"
    , 50 //nrofArrayElements                           
    , &reflection_RunnableJc_s                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((RunnableJc_Y*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_RunnableJc_Y
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_RunnableJc_Y =
{ INIZ_objReflId_ObjectJc(reflection_RunnableJc_Y, &reflection_ClassJc, INIZ_ID_ClassJc)
, "RunnableJc_Y"
, 0
, sizeof(RunnableJc_Y)
, (FieldJcArray const*)&reflection_Fields_RunnableJc_Y  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};



extern_C const ClassJc reflection_ThreadJc_s;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_StringJc;  //used for field name

extern_C const ClassJc reflection_RunnableJcREF;  //used for field target
  

const struct SuperClasses_ThreadJc_s_ClassOffset_idxMtblJcARRAY_t  //Type for the super class
{ ObjectArrayJc head;
  ClassOffset_idxMtblJc data[1];
}  superClasses_ThreadJc_s =   //reflection instance for the super class
{ INIZ_ObjectArrayJc(superClasses_ThreadJc_s, 1, ClassOffset_idxMtblJc, null, INIZ_ID_ClassOffset_idxMtblJc)
  , { &reflection_ObjectJc                                   
    , 0 //TODO Index of mtbl of superclass
      //The field which presents the superclass data in inspector access.
    , { "object"     
      , 0 //arraysize
      , &reflection_ObjectJc  //type of super                                                                                         
      , kEmbeddedContainer_Modifier_reflectJc //hint: embd helps to show the real type.
      , 0 //offsetalways 0 (C++?)
      , 0  //offsetToObjectifcBase
      , &reflection_ObjectJc  
      }
    }
};

const struct Reflection_Fields_ThreadJc_s_t
{ ObjectArrayJc head;
  FieldJc data[7];
} reflection_Fields_ThreadJc_s =
{ INIZ_ObjectArrayJc(reflection_Fields_ThreadJc_s, 7, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "hThread"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_void                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc)|mReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadJc_s*)(0x1000))->hThread)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_ThreadJc_s
    }
  , 
    { "name"
    , 0   //no Array, no Bitfield                           
    , &reflection_StringJc                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadJc_s*)(0x1000))->name)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_ThreadJc_s
    }
  , 
    { "target"
    , 0   //no Array, no Bitfield                           
    , &reflection_RunnableJcREF                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadJc_s*)(0x1000))->target)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_ThreadJc_s
    }
  , 
    { "stackSize"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadJc_s*)(0x1000))->stackSize)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_ThreadJc_s
    }
  , 
    { "state"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadJc_s*)(0x1000))->state)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_ThreadJc_s
    }
  , 
    { "nPriority"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadJc_s*)(0x1000))->nPriority)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_ThreadJc_s
    }
  , 
    { "sCalledName"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_uint8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadJc_s*)(0x1000))->sCalledName)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_ThreadJc_s
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_ThreadJc_s =
{ INIZ_objReflId_ObjectJc(reflection_ThreadJc_s, &reflection_ClassJc, INIZ_ID_ClassJc)
, "ThreadJc_s"
, 0
, sizeof(ThreadJc_s)
, (FieldJcArray const*)&reflection_Fields_ThreadJc_s  //attributes and associations
, null  //method      
, (ClassOffset_idxMtblJcARRAY*)&superClasses_ThreadJc_s  //superclass  
, null  //interfaces  
, mObjectJc_Modifier_reflectJc   
, null  //virtual table
};



extern_C const ClassJc reflection_ThreadJc_s_Y;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_ObjectArrayJc;  //used for field head

extern_C const ClassJc reflection_ThreadJc_s;  //used for field data

const struct Reflection_Fields_ThreadJc_s_Y_t
{ ObjectArrayJc head;
  FieldJc data[2];
} reflection_Fields_ThreadJc_s_Y =
{ INIZ_ObjectArrayJc(reflection_Fields_ThreadJc_s_Y, 2, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "head"
    , 0   //no Array, no Bitfield                           
    , &reflection_ObjectArrayJc                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadJc_s_Y*)(0x1000))->head)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_ThreadJc_s_Y
    }
  , 
    { "data"
    , 50 //nrofArrayElements                           
    , &reflection_ThreadJc_s                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadJc_s_Y*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_ThreadJc_s_Y
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_ThreadJc_s_Y =
{ INIZ_objReflId_ObjectJc(reflection_ThreadJc_s_Y, &reflection_ClassJc, INIZ_ID_ClassJc)
, "ThreadJc_s_Y"
, 0
, sizeof(ThreadJc_s_Y)
, (FieldJcArray const*)&reflection_Fields_ThreadJc_s_Y  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};

