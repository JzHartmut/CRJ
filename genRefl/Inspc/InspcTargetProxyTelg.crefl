
    
//This file is generated by ZBNF/zbnfjax/jzTc/Cheader2Refl.jzTc
#include "Inspc/InspcTargetProxyTelg.h"  
#include <Jc/ReflectionJc.h>
#include <stddef.h>


extern_C const ClassJc reflection_TelgProxy2Target_Inspc_s;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_int16BigEndian;  //used for field length

extern_C const ClassJc reflection_int16BigEndian;  //used for field cmd

extern_C const ClassJc reflection_int32BigEndian;  //used for field seqnr

extern_C const ClassJc reflection_int32BigEndian;  //used for field address

extern_C const ClassJc reflection_int32BigEndian;  //used for field value

const struct Reflection_Fields_TelgProxy2Target_Inspc_s_t
{ ObjectArrayJc head;
  FieldJc data[5];
} reflection_Fields_TelgProxy2Target_Inspc_s =
{ CONST_ObjectArrayJc(FieldJc, 5, OBJTYPE_FieldJc, null, &reflection_Fields_TelgProxy2Target_Inspc_s)
, {  
    { "length"
    , 0   //no Array, no Bitfield
    , &reflection_int16BigEndian                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)(((intPTR)(&((TelgProxy2Target_Inspc_s*)(0x1000))->length)) -0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_TelgProxy2Target_Inspc_s
    }
  , 
    { "cmd"
    , 0   //no Array, no Bitfield
    , &reflection_int16BigEndian                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)(((intPTR)(&((TelgProxy2Target_Inspc_s*)(0x1000))->cmd)) -0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_TelgProxy2Target_Inspc_s
    }
  , 
    { "seqnr"
    , 0   //no Array, no Bitfield
    , &reflection_int32BigEndian                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)(((intPTR)(&((TelgProxy2Target_Inspc_s*)(0x1000))->seqnr)) -0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_TelgProxy2Target_Inspc_s
    }
  , 
    { "address"
    , 0   //no Array, no Bitfield
    , &reflection_int32BigEndian                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)(((intPTR)(&((TelgProxy2Target_Inspc_s*)(0x1000))->address)) -0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_TelgProxy2Target_Inspc_s
    }
  , 
    { "value"
    , 0   //no Array, no Bitfield
    , &reflection_int32BigEndian                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)(((intPTR)(&((TelgProxy2Target_Inspc_s*)(0x1000))->value)) -0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_TelgProxy2Target_Inspc_s
    }
  
} }; 
                                                    

const ClassJc reflection_TelgProxy2Target_Inspc_s =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_TelgProxy2Target_Inspc_s, &reflection_ClassJc)
, "TelgProxy2Target_Inspc_s"
, 0
, sizeof(TelgProxy2Target_Inspc_s)
, (FieldJcArray const*)&reflection_Fields_TelgProxy2Target_Inspc_s  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};



extern_C const ClassJc reflection_TelgTarget2Proxy_Inspc_s;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_int16BigEndian;  //used for field length

extern_C const ClassJc reflection_int16BigEndian;  //used for field cmd

extern_C const ClassJc reflection_int32BigEndian;  //used for field seqnr

extern_C const ClassJc reflection_int32BigEndian;  //used for field retValue

const struct Reflection_Fields_TelgTarget2Proxy_Inspc_s_t
{ ObjectArrayJc head;
  FieldJc data[4];
} reflection_Fields_TelgTarget2Proxy_Inspc_s =
{ CONST_ObjectArrayJc(FieldJc, 4, OBJTYPE_FieldJc, null, &reflection_Fields_TelgTarget2Proxy_Inspc_s)
, {  
    { "length"
    , 0   //no Array, no Bitfield
    , &reflection_int16BigEndian                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)(((intPTR)(&((TelgTarget2Proxy_Inspc_s*)(0x1000))->length)) -0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_TelgTarget2Proxy_Inspc_s
    }
  , 
    { "cmd"
    , 0   //no Array, no Bitfield
    , &reflection_int16BigEndian                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)(((intPTR)(&((TelgTarget2Proxy_Inspc_s*)(0x1000))->cmd)) -0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_TelgTarget2Proxy_Inspc_s
    }
  , 
    { "seqnr"
    , 0   //no Array, no Bitfield
    , &reflection_int32BigEndian                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)(((intPTR)(&((TelgTarget2Proxy_Inspc_s*)(0x1000))->seqnr)) -0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_TelgTarget2Proxy_Inspc_s
    }
  , 
    { "retValue"
    , 0   //no Array, no Bitfield
    , &reflection_int32BigEndian                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)(((intPTR)(&((TelgTarget2Proxy_Inspc_s*)(0x1000))->retValue)) -0x1000)
    , 0  //offsetToObjectifcBase
    , &reflection_TelgTarget2Proxy_Inspc_s
    }
  
} }; 
                                                    

const ClassJc reflection_TelgTarget2Proxy_Inspc_s =
{ CONST_ObjectJc(OBJTYPE_ClassJc + sizeof(ClassJc), &reflection_TelgTarget2Proxy_Inspc_s, &reflection_ClassJc)
, "TelgTarget2Proxy_Inspc_s"
, 0
, sizeof(TelgTarget2Proxy_Inspc_s)
, (FieldJcArray const*)&reflection_Fields_TelgTarget2Proxy_Inspc_s  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0 
, null  //virtual table
};

