
    
//This file is generated by ZBNF/zbnfjax/jzTc/Cheader2Refl.jzTc
#include "Inspc/FBaccess_Inspc_priv.h"  
#include <Jc/ReflectionJc.h>
#include <stddef.h>


extern_C const ClassJc reflection_SimulationTime_Inspc;  //the just defined reflection_ used in the own fields.
const struct Reflection_Fields_SimulationTime_Inspc_t
{ ObjectArrayJc head;
  FieldJc data[3];
} reflection_Fields_SimulationTime_Inspc =
{ INIZ_ObjectArrayJc(reflection_Fields_SimulationTime_Inspc, 3, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "timeShort"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((SimulationTime_Inspc*)(0x1000))->timeShort)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_SimulationTime_Inspc
    }
  , 
    { "spare2"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((SimulationTime_Inspc*)(0x1000))->spare2)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_SimulationTime_Inspc
    }
  , 
    { "timeSim"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_double                                                                                            
    , (8<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((SimulationTime_Inspc*)(0x1000))->timeSim)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_SimulationTime_Inspc
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_SimulationTime_Inspc =
{ INIZ_objReflId_ObjectJc(reflection_SimulationTime_Inspc, &reflection_ClassJc, INIZ_ID_ClassJc)
, "SimulationTime_Inspc"
, 0
, sizeof(SimulationTime_Inspc)
, (FieldJcArray const*)&reflection_Fields_SimulationTime_Inspc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};



extern_C const ClassJc reflection_FBaccess_Inspc;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_ObjectJc;  //used for field object

extern_C const ClassJc reflection_DataNode_Inspc;  //used for field rootNode

extern_C const ClassJc reflection_SimulationTime_Inspc;  //used for field simTime

extern_C const ClassJc reflection_Inspector_Inspc_s;  //used for field theInspector
  

const struct SuperClasses_FBaccess_Inspc_ClassOffset_idxMtblJcARRAY_t  //Type for the super class
{ ObjectArrayJc head;
  ClassOffset_idxMtblJc data[1];
}  superClasses_FBaccess_Inspc =   //reflection instance for the super class
{ INIZ_ObjectArrayJc(superClasses_FBaccess_Inspc, 1, ClassOffset_idxMtblJc, null, INIZ_ID_ClassOffset_idxMtblJc)
  , { &reflection_ObjectJc                                   
    , 0 //TODO Index of mtbl of superclass
      //The field which presents the superclass data in inspector access.
    , { "object"     
      , 0 //arraysize
      , &reflection_ObjectJc  //type of super                                                                                         
      , kEmbeddedContainer_Modifier_reflectJc //hint: embd helps to show the real type.
      , 0 //offsetalways 0 (C++?)
      , 0  //offsetToObjectifcBase
      , &reflection_ObjectJc  
      }
    }
};

const struct Reflection_Fields_FBaccess_Inspc_t
{ ObjectArrayJc head;
  FieldJc data[4];
} reflection_Fields_FBaccess_Inspc =
{ INIZ_ObjectArrayJc(reflection_Fields_FBaccess_Inspc, 4, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "object"
    , 0   //no Array, no Bitfield                           
    , &reflection_ObjectJc                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((FBaccess_Inspc*)(0x1000))->object)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_FBaccess_Inspc
    }
  , 
    { "rootNode"
    , 0   //no Array, no Bitfield                           
    , &reflection_DataNode_Inspc                                                                                            
    , 0|mReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((FBaccess_Inspc*)(0x1000))->rootNode)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_FBaccess_Inspc
    }
  , 
    { "simTime"
    , 0   //no Array, no Bitfield                           
    , &reflection_SimulationTime_Inspc                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((FBaccess_Inspc*)(0x1000))->simTime)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_FBaccess_Inspc
    }
  , 
    { "theInspector"
    , 0   //no Array, no Bitfield                           
    , &reflection_Inspector_Inspc_s                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((FBaccess_Inspc*)(0x1000))->theInspector)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_FBaccess_Inspc
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_FBaccess_Inspc =
{ INIZ_objReflId_ObjectJc(reflection_FBaccess_Inspc, &reflection_ClassJc, INIZ_ID_ClassJc)
, "FBaccess_Inspc"
, 0
, sizeof(FBaccess_Inspc)
, (FieldJcArray const*)&reflection_Fields_FBaccess_Inspc  //attributes and associations
, null  //method      
, (ClassOffset_idxMtblJcARRAY*)&superClasses_FBaccess_Inspc  //superclass  
, null  //interfaces  
, mObjectJc_Modifier_reflectJc   
, null  //virtual table
};

