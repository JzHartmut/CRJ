
    
//This file is generated by ZBNF/zbnfjax/jzTc/Cheader2Refl.jzTc
#include "emC/Exception_emC.h"  
#include <Jc/ReflectionJc.h>
#include <stddef.h>


extern_C const ClassJc reflection_TryObjectJc;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_ExceptionJc;  //used for field exc

const struct Reflection_Fields_TryObjectJc_t
{ ObjectArrayJc head;
  FieldJc data[2];
} reflection_Fields_TryObjectJc =
{ INIZ_ObjectArrayJc(reflection_Fields_TryObjectJc, 2, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "exc"
    , 0   //no Array, no Bitfield                           
    , &reflection_ExceptionJc                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((TryObjectJc*)(0x1000))->exc)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_TryObjectJc
    }
  , 
    { "excNrTestCatch"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((TryObjectJc*)(0x1000))->excNrTestCatch)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_TryObjectJc
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_TryObjectJc =
{ INIZ_objReflId_ObjectJc(reflection_TryObjectJc, &reflection_ClassJc, INIZ_ID_ClassJc)
, "TryObjectJc"
, 0
, sizeof(TryObjectJc)
, (FieldJcArray const*)&reflection_Fields_TryObjectJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};



extern_C const ClassJc reflection_StacktraceJc;  //the just defined reflection_ used in the own fields.
const struct Reflection_Fields_StacktraceJc_t
{ ObjectArrayJc head;
  FieldJc data[2];
} reflection_Fields_StacktraceJc =
{ INIZ_ObjectArrayJc(reflection_Fields_StacktraceJc, 2, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "ix"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((StacktraceJc*)(0x1000))->ix)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_StacktraceJc
    }
  , 
    { "ixPrev"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((StacktraceJc*)(0x1000))->ixPrev)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_StacktraceJc
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_StacktraceJc =
{ INIZ_objReflId_ObjectJc(reflection_StacktraceJc, &reflection_ClassJc, INIZ_ID_ClassJc)
, "StacktraceJc"
, 0
, sizeof(StacktraceJc)
, (FieldJcArray const*)&reflection_Fields_StacktraceJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};

