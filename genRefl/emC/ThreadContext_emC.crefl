
    
//This file is generated by ZBNF/zbnfjax/jzTc/Cheader2Refl.jzTc
#include "emC/ThreadContext_emC.h"  
#include <Jc/ReflectionJc.h>
#include <stddef.h>


extern_C const ClassJc reflection_AddrUsed_ThreadContext_emC;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_MemC;  //used for field used

const struct Reflection_Fields_AddrUsed_ThreadContext_emC_t
{ ObjectArrayJc head;
  FieldJc data[2];
} reflection_Fields_AddrUsed_ThreadContext_emC =
{ INIZ_ObjectArrayJc(reflection_Fields_AddrUsed_ThreadContext_emC, 2, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "sign"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((AddrUsed_ThreadContext_emC*)(0x1000))->sign)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_AddrUsed_ThreadContext_emC
    }
  , 
    { "used"
    , 0   //no Array, no Bitfield                           
    , &reflection_MemC                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((AddrUsed_ThreadContext_emC*)(0x1000))->used)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_AddrUsed_ThreadContext_emC
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_AddrUsed_ThreadContext_emC =
{ INIZ_objReflId_ObjectJc(reflection_AddrUsed_ThreadContext_emC, &reflection_ClassJc, INIZ_ID_ClassJc)
, "AddrUsed_ThreadContext_emC"
, 0
, sizeof(AddrUsed_ThreadContext_emC)
, (FieldJcArray const*)&reflection_Fields_AddrUsed_ThreadContext_emC  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};



extern_C const ClassJc reflection_StacktraceElementJc;  //the just defined reflection_ used in the own fields.
#define reflection_TryObjectJc_t reflection_TryObjectJc
extern_C const ClassJc reflection_TryObjectJc_t;  //used for field tryObject

const struct Reflection_Fields_StacktraceElementJc_t
{ ObjectArrayJc head;
  FieldJc data[4];
} reflection_Fields_StacktraceElementJc =
{ INIZ_ObjectArrayJc(reflection_Fields_StacktraceElementJc, 4, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "name"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_uint8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((StacktraceElementJc*)(0x1000))->name)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_StacktraceElementJc
    }
  , 
    { "source"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_uint8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((StacktraceElementJc*)(0x1000))->source)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_StacktraceElementJc
    }
  , 
    { "line"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((StacktraceElementJc*)(0x1000))->line)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_StacktraceElementJc
    }
  , 
    { "tryObject"
    , 0   //no Array, no Bitfield                           
    , &reflection_TryObjectJc_t                                                                                            
    , 0|mReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((StacktraceElementJc*)(0x1000))->tryObject)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_StacktraceElementJc
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_StacktraceElementJc =
{ INIZ_objReflId_ObjectJc(reflection_StacktraceElementJc, &reflection_ClassJc, INIZ_ID_ClassJc)
, "StacktraceElementJc"
, 0
, sizeof(StacktraceElementJc)
, (FieldJcArray const*)&reflection_Fields_StacktraceElementJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};



extern_C const ClassJc reflection_StacktraceThreadContext_emC_s;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_StacktraceElementJc;  //used for field entries

const struct Reflection_Fields_StacktraceThreadContext_emC_s_t
{ ObjectArrayJc head;
  FieldJc data[3];
} reflection_Fields_StacktraceThreadContext_emC_s =
{ INIZ_ObjectArrayJc(reflection_Fields_StacktraceThreadContext_emC_s, 3, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "zEntries"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_uint32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((StacktraceThreadContext_emC_s*)(0x1000))->zEntries)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_StacktraceThreadContext_emC_s
    }
  , 
    { "maxNrofEntriesStacktraceBuffer"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((StacktraceThreadContext_emC_s*)(0x1000))->maxNrofEntriesStacktraceBuffer)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_StacktraceThreadContext_emC_s
    }
  , 
    { "entries"
    , 100 //nrofArrayElements                           
    , &reflection_StacktraceElementJc                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((StacktraceThreadContext_emC_s*)(0x1000))->entries)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_StacktraceThreadContext_emC_s
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_StacktraceThreadContext_emC_s =
{ INIZ_objReflId_ObjectJc(reflection_StacktraceThreadContext_emC_s, &reflection_ClassJc, INIZ_ID_ClassJc)
, "StacktraceThreadContext_emC_s"
, 0
, sizeof(StacktraceThreadContext_emC_s)
, (FieldJcArray const*)&reflection_Fields_StacktraceThreadContext_emC_s  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};



extern_C const ClassJc reflection_ThreadContext_emC_s;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_MemC;  //used for field bufferAlloc

extern_C const ClassJc reflection_AddrUsed_ThreadContext_emC;  //used for field addrUsed

extern_C const ClassJc reflection_MemUnit;  //used for field addrFree

#define reflection_BlockHeap_emC_t reflection_BlockHeap_emC
extern_C const ClassJc reflection_BlockHeap_emC_t;  //used for field blockHeap

extern_C const ClassJc reflection_StacktraceThreadContext_emC_s;  //used for field stacktrc

const struct Reflection_Fields_ThreadContext_emC_s_t
{ ObjectArrayJc head;
  FieldJc data[9];
} reflection_Fields_ThreadContext_emC_s =
{ INIZ_ObjectArrayJc(reflection_Fields_ThreadContext_emC_s, 9, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "bufferAlloc"
    , 0   //no Array, no Bitfield                           
    , &reflection_MemC                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadContext_emC_s*)(0x1000))->bufferAlloc)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_ThreadContext_emC_s
    }
  , 
    { "addrUsed"
    , 30 //nrofArrayElements                           
    , &reflection_AddrUsed_ThreadContext_emC                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadContext_emC_s*)(0x1000))->addrUsed)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_ThreadContext_emC_s
    }
  , 
    { "bitAddrUsed"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadContext_emC_s*)(0x1000))->bitAddrUsed)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_ThreadContext_emC_s
    }
  , 
    { "addrFree"
    , 0   //no Array, no Bitfield                           
    , &reflection_MemUnit                                                                                            
    , 0|mReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadContext_emC_s*)(0x1000))->addrFree)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_ThreadContext_emC_s
    }
  , 
    { "ixLastAddrUsed"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int16                                                                                            
    , (2<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadContext_emC_s*)(0x1000))->ixLastAddrUsed)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_ThreadContext_emC_s
    }
  , 
    { "mode"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int16                                                                                            
    , (2<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadContext_emC_s*)(0x1000))->mode)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_ThreadContext_emC_s
    }
  , 
    { "blockHeap"
    , 0   //no Array, no Bitfield                           
    , &reflection_BlockHeap_emC_t                                                                                            
    , 0|mReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadContext_emC_s*)(0x1000))->blockHeap)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_ThreadContext_emC_s
    }
  , 
    { "topmemAddrOfStack"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_void                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc)|mReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadContext_emC_s*)(0x1000))->topmemAddrOfStack)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_ThreadContext_emC_s
    }
  , 
    { "stacktrc"
    , 0   //no Array, no Bitfield                           
    , &reflection_StacktraceThreadContext_emC_s                                                                                            
    , 0|kEmbeddedContainer_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadContext_emC_s*)(0x1000))->stacktrc)) -0x1000 )
    , 0  //offsetToObjectifcBase
    , &reflection_ThreadContext_emC_s
    }
  
} }; 
                                                    
                                                                   
const ClassJc reflection_ThreadContext_emC_s =
{ INIZ_objReflId_ObjectJc(reflection_ThreadContext_emC_s, &reflection_ClassJc, INIZ_ID_ClassJc)
, "ThreadContext_emC_s"
, 0
, sizeof(ThreadContext_emC_s)
, (FieldJcArray const*)&reflection_Fields_ThreadContext_emC_s  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};

