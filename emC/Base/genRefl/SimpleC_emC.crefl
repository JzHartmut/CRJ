
    
#include <emC/Base/SimpleC_emC.h>  


//forward declaration of the following definition necessary because extern_C definition. 
extern_C const ClassJc refl_U_intfloat;

#ifdef DEF_REFLECTION_OFFS_FILE  //experience: ReflOffs h-file-related
int32 const reflectionOffset_U_intfloat[] =
{ 123  //< &nrClass>   //index of class in Offset data
}; 
    
#else  //DEF_REFLECTION_FULL


const struct Reflection_Fields_U_intfloat_t
{ ObjectArrayJc head;
  FieldJc data[2];
} refl_Fields_U_intfloat =
{ INIZ_ObjectArrayJc(refl_Fields_U_intfloat, 2, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "f"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_float                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((U_intfloat*)(0x1000))->f)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_U_intfloat
    }
  , 
    { "i"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((U_intfloat*)(0x1000))->i)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_U_intfloat
    }
  
} }; 
 

#define DEFINED_refl_U_intfloat    
const ClassJc   refl_U_intfloat =
{ INIZ_objReflId_ObjectJc(refl_U_intfloat, refl_ClassJc, ID_refl_ClassJc)
, "U_intfloat"
, 0
, sizeof(U_intfloat)
, (FieldJcArray const*)&refl_Fields_U_intfloat  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl  
, null  //virtual table
#endif
};

#endif //DEF_REFLECTION_FULL


//forward declaration of the following definition necessary because extern_C definition. 
extern_C const ClassJc refl_U_ptr;

#ifdef DEF_REFLECTION_OFFS_FILE  //experience: ReflOffs h-file-related
int32 const reflectionOffset_U_ptr[] =
{ 123  //< &nrClass>   //index of class in Offset data
}; 
    
#else  //DEF_REFLECTION_FULL


const struct Reflection_Fields_U_ptr_t
{ ObjectArrayJc head;
  FieldJc data[3];
} refl_Fields_U_ptr =
{ INIZ_ObjectArrayJc(refl_Fields_U_ptr, 3, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "f"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_float                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((U_ptr*)(0x1000))->f)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_U_ptr
    }
  , 
    { "i"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((U_ptr*)(0x1000))->i)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_U_ptr
    }
  , 
    { "addr"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((U_ptr*)(0x1000))->addr)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_U_ptr
    }
  
} }; 
 

#define DEFINED_refl_U_ptr    
const ClassJc   refl_U_ptr =
{ INIZ_objReflId_ObjectJc(refl_U_ptr, refl_ClassJc, ID_refl_ClassJc)
, "U_ptr"
, 0
, sizeof(U_ptr)
, (FieldJcArray const*)&refl_Fields_U_ptr  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl  
, null  //virtual table
#endif
};

#endif //DEF_REFLECTION_FULL


//forward declaration of the following definition necessary because extern_C definition. 
extern_C const ClassJc refl_Int32Array256;

#ifdef DEF_REFLECTION_OFFS_FILE  //experience: ReflOffs h-file-related
int32 const reflectionOffset_Int32Array256[] =
{ 123  //< &nrClass>   //index of class in Offset data
}; 
    
#else  //DEF_REFLECTION_FULL


const struct Reflection_Fields_Int32Array256_t
{ ObjectArrayJc head;
  FieldJc data[1];
} refl_Fields_Int32Array256 =
{ INIZ_ObjectArrayJc(refl_Fields_Int32Array256, 1, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "data"
    , 256 //nrofArrayElements                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) | kStaticArray_Modifier_reflectJc|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((Int32Array256*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_Int32Array256
    }
  
} }; 
 

#define DEFINED_refl_Int32Array256    
const ClassJc   refl_Int32Array256 =
{ INIZ_objReflId_ObjectJc(refl_Int32Array256, refl_ClassJc, ID_refl_ClassJc)
, "Int32Array256"
, 0
, sizeof(Int32Array256)
, (FieldJcArray const*)&refl_Fields_Int32Array256  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl  
, null  //virtual table
#endif
};

#endif //DEF_REFLECTION_FULL


//forward declaration of the following definition necessary because extern_C definition. 
extern_C const ClassJc refl_FloatArray256;

#ifdef DEF_REFLECTION_OFFS_FILE  //experience: ReflOffs h-file-related
int32 const reflectionOffset_FloatArray256[] =
{ 123  //< &nrClass>   //index of class in Offset data
}; 
    
#else  //DEF_REFLECTION_FULL


const struct Reflection_Fields_FloatArray256_t
{ ObjectArrayJc head;
  FieldJc data[1];
} refl_Fields_FloatArray256 =
{ INIZ_ObjectArrayJc(refl_Fields_FloatArray256, 1, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "data"
    , 256 //nrofArrayElements                           
    , REFLECTION_float                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) | kStaticArray_Modifier_reflectJc|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((FloatArray256*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_FloatArray256
    }
  
} }; 
 

#define DEFINED_refl_FloatArray256    
const ClassJc   refl_FloatArray256 =
{ INIZ_objReflId_ObjectJc(refl_FloatArray256, refl_ClassJc, ID_refl_ClassJc)
, "FloatArray256"
, 0
, sizeof(FloatArray256)
, (FieldJcArray const*)&refl_Fields_FloatArray256  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl  
, null  //virtual table
#endif
};

#endif //DEF_REFLECTION_FULL


//forward declaration of the following definition necessary because extern_C definition. 
extern_C const ClassJc refl_FloatArray20;

#ifdef DEF_REFLECTION_OFFS_FILE  //experience: ReflOffs h-file-related
int32 const reflectionOffset_FloatArray20[] =
{ 123  //< &nrClass>   //index of class in Offset data
}; 
    
#else  //DEF_REFLECTION_FULL


const struct Reflection_Fields_FloatArray20_t
{ ObjectArrayJc head;
  FieldJc data[1];
} refl_Fields_FloatArray20 =
{ INIZ_ObjectArrayJc(refl_Fields_FloatArray20, 1, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "data"
    , 20 //nrofArrayElements                           
    , REFLECTION_float                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) | kStaticArray_Modifier_reflectJc|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((FloatArray20*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_FloatArray20
    }
  
} }; 
 

#define DEFINED_refl_FloatArray20    
const ClassJc   refl_FloatArray20 =
{ INIZ_objReflId_ObjectJc(refl_FloatArray20, refl_ClassJc, ID_refl_ClassJc)
, "FloatArray20"
, 0
, sizeof(FloatArray20)
, (FieldJcArray const*)&refl_Fields_FloatArray20  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl  
, null  //virtual table
#endif
};

#endif //DEF_REFLECTION_FULL
