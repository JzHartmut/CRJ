
    
#include <emC/Base/Va_list_emC.h>  


//forward declaration of the following definition necessary because extern_C definition. 
extern_C const ClassJc refl_Va_listFW;

#ifdef DEF_REFLECTION_OFFS_FILE  //experience: ReflOffs h-file-related
int32 const reflectionOffset_Va_listFW[] =
{ 123  //< &nrClass>   //index of class in Offset data
}; 
    
#else  //DEF_REFLECTION_FULL


extern_C const ClassJc refl_va_list;  //used for field args

const struct Reflection_Fields_Va_listFW_t
{ ObjectArrayJc head;
  FieldJc data[2];
} refl_Fields_Va_listFW =
{ INIZ_ObjectArrayJc(refl_Fields_Va_listFW, 2, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "typeArgs"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((Va_listFW*)(0x1000))->typeArgs)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_Va_listFW
    }
  , 
    { "args"
    , 0   //no Array, no Bitfield                           
    , &refl_va_list                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((Va_listFW*)(0x1000))->args)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_Va_listFW
    }
  
} }; 
 

#define DEFINED_refl_Va_listFW    
const ClassJc   refl_Va_listFW =
{ INIZ_objReflId_ObjectJc(refl_Va_listFW, refl_ClassJc, ID_refl_ClassJc)
, "Va_listFW"
, 0
, sizeof(Va_listFW)
, (FieldJcArray const*)&refl_Fields_Va_listFW  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl  
, null  //virtual table
#endif
};

#endif //DEF_REFLECTION_FULL
