
    
#include <emC/Base/ParseArgs_emC.h>  


//forward declaration of the following definition necessary because extern_C definition. 
extern_C const ClassJc refl_CharArray20;

#ifdef DEF_REFLECTION_OFFS_FILE  //experience: ReflOffs h-file-related
int32 const reflectionOffset_CharArray20[] =
{ 123  //< &nrClass>   //index of class in Offset data
}; 
    
#else  //DEF_REFLECTION_FULL


const struct Reflection_Fields_CharArray20_t
{ ObjectArrayJc head;
  FieldJc data[1];
} refl_Fields_CharArray20 =
{ INIZ_ObjectArrayJc(refl_Fields_CharArray20, 1, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "args"
    , 20 //nrofArrayElements                           
    , REFLECTION_int8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) | kReference_Modifier_reflectJc | kStaticArray_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((CharArray20*)(0x1000))->args)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_CharArray20
    }
  
} }; 
 

#define DEFINED_refl_CharArray20    
const ClassJc   refl_CharArray20 =
{ INIZ_objReflId_ObjectJc(refl_CharArray20, refl_ClassJc, ID_refl_ClassJc)
, "CharArray20"
, 0
, sizeof(CharArray20)
, (FieldJcArray const*)&refl_Fields_CharArray20  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl  
, null  //virtual table
#endif
};

#endif //DEF_REFLECTION_FULL


//forward declaration of the following definition necessary because extern_C definition. 
extern_C const ClassJc refl_Ctrl_ParseArgs;

#ifdef DEF_REFLECTION_OFFS_FILE  //experience: ReflOffs h-file-related
int32 const reflectionOffset_Ctrl_ParseArgs[] =
{ 123  //< &nrClass>   //index of class in Offset data
}; 
    
#else  //DEF_REFLECTION_FULL


extern_C const ClassJc refl_ArgEvalOper;  //used for field argEvalOp

const struct Reflection_Fields_Ctrl_ParseArgs_t
{ ObjectArrayJc head;
  FieldJc data[4];
} refl_Fields_Ctrl_ParseArgs =
{ INIZ_ObjectArrayJc(refl_Fields_Ctrl_ParseArgs, 4, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "option"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((Ctrl_ParseArgs*)(0x1000))->option)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_Ctrl_ParseArgs
    }
  , 
    { "help"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((Ctrl_ParseArgs*)(0x1000))->help)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_Ctrl_ParseArgs
    }
  , 
    { "dst"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((Ctrl_ParseArgs*)(0x1000))->dst)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_Ctrl_ParseArgs
    }
  , 
    { "argEvalOp"
    , 0   //no Array, no Bitfield                           
    , &refl_ArgEvalOper                                                                                            
    , 0 | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((Ctrl_ParseArgs*)(0x1000))->argEvalOp)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_Ctrl_ParseArgs
    }
  
} }; 
 

#define DEFINED_refl_Ctrl_ParseArgs    
const ClassJc   refl_Ctrl_ParseArgs =
{ INIZ_objReflId_ObjectJc(refl_Ctrl_ParseArgs, refl_ClassJc, ID_refl_ClassJc)
, "Ctrl_ParseArgs"
, 0
, sizeof(Ctrl_ParseArgs)
, (FieldJcArray const*)&refl_Fields_Ctrl_ParseArgs  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl  
, null  //virtual table
#endif
};

#endif //DEF_REFLECTION_FULL
