
    
//This file is generated by ZBNF/zbnfjax/jzTc/Cheader2Refl.jzTc
#include "emC/Base/ParseArgs_emC.h"  
//#include <stddef.h>


extern_C const ClassJc reflection_CharArray20;  //the just defined reflection_ used in the own fields.
const struct Reflection_Fields_CharArray20_t
{ ObjectArrayJc head;
  FieldJc data[1];
} reflection_Fields_CharArray20 =
{ INIZ_ObjectArrayJc(reflection_Fields_CharArray20, 1, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "args"
    , 20 //nrofArrayElements                           
    , REFLECTION_int8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) | kReference_Modifier_reflectJc | kStaticArray_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((CharArray20*)(0x1000))->args)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_CharArray20
    }
  
} }; 
 
                                                                   
const ClassJc reflection_CharArray20 =
{ INIZ_objReflId_ObjectJc(reflection_CharArray20, &reflection_ClassJc, INIZ_ID_ClassJc)
, "CharArray20"
, 0
, sizeof(CharArray20)
, (FieldJcArray const*)&reflection_Fields_CharArray20  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};



extern_C const ClassJc reflection_Ctrl_ParseArgs;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_ArgEvalOper;  //used for field argEvalOp

const struct Reflection_Fields_Ctrl_ParseArgs_t
{ ObjectArrayJc head;
  FieldJc data[4];
} reflection_Fields_Ctrl_ParseArgs =
{ INIZ_ObjectArrayJc(reflection_Fields_Ctrl_ParseArgs, 4, FieldJc, null, INIZ_ID_FieldJc)
, {  
    { "option"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((Ctrl_ParseArgs*)(0x1000))->option)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_Ctrl_ParseArgs
    }
  , 
    { "help"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((Ctrl_ParseArgs*)(0x1000))->help)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_Ctrl_ParseArgs
    }
  , 
    { "dst"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((Ctrl_ParseArgs*)(0x1000))->dst)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_Ctrl_ParseArgs
    }
  , 
    { "argEvalOp"
    , 0   //no Array, no Bitfield                           
    , &reflection_ArgEvalOper                                                                                            
    , 0 | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((Ctrl_ParseArgs*)(0x1000))->argEvalOp)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &reflection_Ctrl_ParseArgs
    }
  
} }; 
 
                                                                   
const ClassJc reflection_Ctrl_ParseArgs =
{ INIZ_objReflId_ObjectJc(reflection_Ctrl_ParseArgs, &reflection_ClassJc, INIZ_ID_ClassJc)
, "Ctrl_ParseArgs"
, 0
, sizeof(Ctrl_ParseArgs)
, (FieldJcArray const*)&reflection_Fields_Ctrl_ParseArgs  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
, null  //virtual table
};

