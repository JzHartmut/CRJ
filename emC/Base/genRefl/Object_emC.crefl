
    
//This file is generated by ZBNF/zbnfjax/jzTc/Cheader2Refl.jzTc
#include "emC/Base/Object_emC.h"  
//#include <stddef.h>


extern_C const ClassJc refl_ObjectArrayJc;  //the just defined refl_ used in the own fields.
extern_C const ClassJc refl_ObjectJc;  //used for field object
  

extern_C const ClassJc refl_ObjectJc;  //the super class here used.
const struct SuperClasses_ObjectArrayJc_ClassOffset_idxVtblJcARRAY_t  //Type for the super class
{ ObjectArrayJc head;
  ClassOffset_idxVtblJc data[1];
}  superClasses_ObjectArrayJc =   //reflection instance for the super class
{ INIZ_ObjectArrayJc(superClasses_ObjectArrayJc, 1, ClassOffset_idxVtblJc, null, ID_refl_ClassOffset_idxVtblJc)
  , { &refl_ObjectJc                                   
    , 0 //TODO Index of mtbl of superclass
      //The field which presents the superclass data in inspector access.
    , { "super"              
      , 0 //arraysize
      , &refl_ObjectJc  //type of super                                                                                         
      , kEmbedded_Modifier_reflectJc //hint: embd helps to show the real type.
        | (0<< kBitAccessLevel_Modifier_FieldJc)  //access level
        | (7<< kBitChangeLevel_Modifier_FieldJc)  //never change
      , 0 //offsetalways 0 (C++?)
      , 0  //offsetToObjectifcBase
      , &refl_ObjectJc  
      }
    }
};

const struct Reflection_Fields_ObjectArrayJc_t
{ ObjectArrayJc head;
  FieldJc data[3];
} refl_Fields_ObjectArrayJc =
{ INIZ_ObjectArrayJc(refl_Fields_ObjectArrayJc, 3, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "sizeElement"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int16                                                                                            
    , (2<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((ObjectArrayJc*)(0x1000))->sizeElement)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ObjectArrayJc
    }
  , 
    { "mode"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int16                                                                                            
    , (2<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((ObjectArrayJc*)(0x1000))->mode)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ObjectArrayJc
    }
  , 
    { "length"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((ObjectArrayJc*)(0x1000))->length)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ObjectArrayJc
    }
  
} }; 
 
                                                                   
const ClassJc refl_ObjectArrayJc =
{ INIZ_objReflId_ObjectJc(refl_ObjectArrayJc, refl_ClassJc, ID_refl_ClassJc)
, "ObjectArrayJc"
, 0
, sizeof(ObjectArrayJc)
, (FieldJcArray const*)&refl_Fields_ObjectArrayJc  //attributes and associations
, null  //method      
, (ClassOffset_idxVtblJcARRAY*)&superClasses_ObjectArrayJc  //superclass  
, null  //interfaces  
, mObjectJc_Modifier_reflectJc   
#ifdef DEF_ClassJc_Vtbl
, null  //virtual table
#endif

};



extern_C const ClassJc refl_int8_Y;  //the just defined refl_ used in the own fields.
extern_C const ClassJc refl_ObjectArrayJc;  //used for field head

const struct Reflection_Fields_int8_Y_t
{ ObjectArrayJc head;
  FieldJc data[2];
} refl_Fields_int8_Y =
{ INIZ_ObjectArrayJc(refl_Fields_int8_Y, 2, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "head"
    , 0   //no Array, no Bitfield                           
    , &refl_ObjectArrayJc                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((int8_Y*)(0x1000))->head)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_int8_Y
    }
  , 
    { "data"
    , 50 //nrofArrayElements                           
    , REFLECTION_int8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) | kStaticArray_Modifier_reflectJc|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((int8_Y*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_int8_Y
    }
  
} }; 
 
                                                                   
const ClassJc refl_int8_Y =
{ INIZ_objReflId_ObjectJc(refl_int8_Y, refl_ClassJc, ID_refl_ClassJc)
, "int8_Y"
, 0
, sizeof(int8_Y)
, (FieldJcArray const*)&refl_Fields_int8_Y  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl
, null  //virtual table
#endif

};



extern_C const ClassJc refl_int16_Y;  //the just defined refl_ used in the own fields.
extern_C const ClassJc refl_ObjectArrayJc;  //used for field head

const struct Reflection_Fields_int16_Y_t
{ ObjectArrayJc head;
  FieldJc data[2];
} refl_Fields_int16_Y =
{ INIZ_ObjectArrayJc(refl_Fields_int16_Y, 2, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "head"
    , 0   //no Array, no Bitfield                           
    , &refl_ObjectArrayJc                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((int16_Y*)(0x1000))->head)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_int16_Y
    }
  , 
    { "data"
    , 50 //nrofArrayElements                           
    , REFLECTION_int16                                                                                            
    , (2<<kBitPrimitiv_Modifier_reflectJc) | kStaticArray_Modifier_reflectJc|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((int16_Y*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_int16_Y
    }
  
} }; 
 
                                                                   
const ClassJc refl_int16_Y =
{ INIZ_objReflId_ObjectJc(refl_int16_Y, refl_ClassJc, ID_refl_ClassJc)
, "int16_Y"
, 0
, sizeof(int16_Y)
, (FieldJcArray const*)&refl_Fields_int16_Y  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl
, null  //virtual table
#endif

};



extern_C const ClassJc refl_int32_Y;  //the just defined refl_ used in the own fields.
extern_C const ClassJc refl_ObjectArrayJc;  //used for field head

const struct Reflection_Fields_int32_Y_t
{ ObjectArrayJc head;
  FieldJc data[2];
} refl_Fields_int32_Y =
{ INIZ_ObjectArrayJc(refl_Fields_int32_Y, 2, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "head"
    , 0   //no Array, no Bitfield                           
    , &refl_ObjectArrayJc                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((int32_Y*)(0x1000))->head)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_int32_Y
    }
  , 
    { "data"
    , 50 //nrofArrayElements                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) | kStaticArray_Modifier_reflectJc|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((int32_Y*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_int32_Y
    }
  
} }; 
 
                                                                   
const ClassJc refl_int32_Y =
{ INIZ_objReflId_ObjectJc(refl_int32_Y, refl_ClassJc, ID_refl_ClassJc)
, "int32_Y"
, 0
, sizeof(int32_Y)
, (FieldJcArray const*)&refl_Fields_int32_Y  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl
, null  //virtual table
#endif

};



extern_C const ClassJc refl_int64_Y;  //the just defined refl_ used in the own fields.
extern_C const ClassJc refl_ObjectArrayJc;  //used for field head

extern_C const ClassJc refl_int64;  //used for field data

const struct Reflection_Fields_int64_Y_t
{ ObjectArrayJc head;
  FieldJc data[2];
} refl_Fields_int64_Y =
{ INIZ_ObjectArrayJc(refl_Fields_int64_Y, 2, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "head"
    , 0   //no Array, no Bitfield                           
    , &refl_ObjectArrayJc                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((int64_Y*)(0x1000))->head)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_int64_Y
    }
  , 
    { "data"
    , 50 //nrofArrayElements                           
    , &refl_int64                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((int64_Y*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_int64_Y
    }
  
} }; 
 
                                                                   
const ClassJc refl_int64_Y =
{ INIZ_objReflId_ObjectJc(refl_int64_Y, refl_ClassJc, ID_refl_ClassJc)
, "int64_Y"
, 0
, sizeof(int64_Y)
, (FieldJcArray const*)&refl_Fields_int64_Y  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl
, null  //virtual table
#endif

};



extern_C const ClassJc refl_float_Y;  //the just defined refl_ used in the own fields.
extern_C const ClassJc refl_ObjectArrayJc;  //used for field head

extern_C const ClassJc refl_int64;  //used for field data

const struct Reflection_Fields_float_Y_t
{ ObjectArrayJc head;
  FieldJc data[2];
} refl_Fields_float_Y =
{ INIZ_ObjectArrayJc(refl_Fields_float_Y, 2, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "head"
    , 0   //no Array, no Bitfield                           
    , &refl_ObjectArrayJc                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((float_Y*)(0x1000))->head)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_float_Y
    }
  , 
    { "data"
    , 50 //nrofArrayElements                           
    , &refl_int64                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((float_Y*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_float_Y
    }
  
} }; 
 
                                                                   
const ClassJc refl_float_Y =
{ INIZ_objReflId_ObjectJc(refl_float_Y, refl_ClassJc, ID_refl_ClassJc)
, "float_Y"
, 0
, sizeof(float_Y)
, (FieldJcArray const*)&refl_Fields_float_Y  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl
, null  //virtual table
#endif

};



extern_C const ClassJc refl_double_Y;  //the just defined refl_ used in the own fields.
extern_C const ClassJc refl_ObjectArrayJc;  //used for field head

extern_C const ClassJc refl_int64;  //used for field data

const struct Reflection_Fields_double_Y_t
{ ObjectArrayJc head;
  FieldJc data[2];
} refl_Fields_double_Y =
{ INIZ_ObjectArrayJc(refl_Fields_double_Y, 2, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "head"
    , 0   //no Array, no Bitfield                           
    , &refl_ObjectArrayJc                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((double_Y*)(0x1000))->head)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_double_Y
    }
  , 
    { "data"
    , 50 //nrofArrayElements                           
    , &refl_int64                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((double_Y*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_double_Y
    }
  
} }; 
 
                                                                   
const ClassJc refl_double_Y =
{ INIZ_objReflId_ObjectJc(refl_double_Y, refl_ClassJc, ID_refl_ClassJc)
, "double_Y"
, 0
, sizeof(double_Y)
, (FieldJcArray const*)&refl_Fields_double_Y  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl
, null  //virtual table
#endif

};



extern_C const ClassJc refl_bool_Y;  //the just defined refl_ used in the own fields.
extern_C const ClassJc refl_ObjectArrayJc;  //used for field head

extern_C const ClassJc refl_bool;  //used for field data

const struct Reflection_Fields_bool_Y_t
{ ObjectArrayJc head;
  FieldJc data[2];
} refl_Fields_bool_Y =
{ INIZ_ObjectArrayJc(refl_Fields_bool_Y, 2, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "head"
    , 0   //no Array, no Bitfield                           
    , &refl_ObjectArrayJc                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((bool_Y*)(0x1000))->head)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_bool_Y
    }
  , 
    { "data"
    , 50 //nrofArrayElements                           
    , &refl_bool                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((bool_Y*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_bool_Y
    }
  
} }; 
 
                                                                   
const ClassJc refl_bool_Y =
{ INIZ_objReflId_ObjectJc(refl_bool_Y, refl_ClassJc, ID_refl_ClassJc)
, "bool_Y"
, 0
, sizeof(bool_Y)
, (FieldJcArray const*)&refl_Fields_bool_Y  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl
, null  //virtual table
#endif

};



extern_C const ClassJc refl_char_Y;  //the just defined refl_ used in the own fields.
extern_C const ClassJc refl_ObjectArrayJc;  //used for field head

const struct Reflection_Fields_char_Y_t
{ ObjectArrayJc head;
  FieldJc data[2];
} refl_Fields_char_Y =
{ INIZ_ObjectArrayJc(refl_Fields_char_Y, 2, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "head"
    , 0   //no Array, no Bitfield                           
    , &refl_ObjectArrayJc                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((char_Y*)(0x1000))->head)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_char_Y
    }
  , 
    { "data"
    , 50 //nrofArrayElements                           
    , REFLECTION_int8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) | kStaticArray_Modifier_reflectJc|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((char_Y*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_char_Y
    }
  
} }; 
 
                                                                   
const ClassJc refl_char_Y =
{ INIZ_objReflId_ObjectJc(refl_char_Y, refl_ClassJc, ID_refl_ClassJc)
, "char_Y"
, 0
, sizeof(char_Y)
, (FieldJcArray const*)&refl_Fields_char_Y  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl
, null  //virtual table
#endif

};



extern_C const ClassJc refl_void_Y;  //the just defined refl_ used in the own fields.
extern_C const ClassJc refl_ObjectArrayJc;  //used for field head

const struct Reflection_Fields_void_Y_t
{ ObjectArrayJc head;
  FieldJc data[2];
} refl_Fields_void_Y =
{ INIZ_ObjectArrayJc(refl_Fields_void_Y, 2, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "head"
    , 0   //no Array, no Bitfield                           
    , &refl_ObjectArrayJc                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((void_Y*)(0x1000))->head)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_void_Y
    }
  , 
    { "data"
    , 50 //nrofArrayElements                           
    , REFLECTION_void                                                                                            
    , 0 | kReference_Modifier_reflectJc | kStaticArray_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((void_Y*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_void_Y
    }
  
} }; 
 
                                                                   
const ClassJc refl_void_Y =
{ INIZ_objReflId_ObjectJc(refl_void_Y, refl_ClassJc, ID_refl_ClassJc)
, "void_Y"
, 0
, sizeof(void_Y)
, (FieldJcArray const*)&refl_Fields_void_Y  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl
, null  //virtual table
#endif

};



extern_C const ClassJc refl_int8ARRAY;  //the just defined refl_ used in the own fields.
extern_C const ClassJc refl_ObjectArrayJc;  //used for field head

const struct Reflection_Fields_int8ARRAY_t
{ ObjectArrayJc head;
  FieldJc data[2];
} refl_Fields_int8ARRAY =
{ INIZ_ObjectArrayJc(refl_Fields_int8ARRAY, 2, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "head"
    , 0   //no Array, no Bitfield                           
    , &refl_ObjectArrayJc                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((int8ARRAY*)(0x1000))->head)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_int8ARRAY
    }
  , 
    { "data"
    , 256 //nrofArrayElements                           
    , REFLECTION_int8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) | kStaticArray_Modifier_reflectJc|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((int8ARRAY*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_int8ARRAY
    }
  
} }; 
 
                                                                   
const ClassJc refl_int8ARRAY =
{ INIZ_objReflId_ObjectJc(refl_int8ARRAY, refl_ClassJc, ID_refl_ClassJc)
, "int8ARRAY"
, 0
, sizeof(int8ARRAY)
, (FieldJcArray const*)&refl_Fields_int8ARRAY  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl
, null  //virtual table
#endif

};



extern_C const ClassJc refl_FieldJc;  //the just defined refl_ used in the own fields.
extern_C const ClassJc refl_ClassJc;  //used for field type_

extern_C const ClassJc refl_ClassJc;  //used for field declaringClass

const struct Reflection_Fields_FieldJc_t
{ ObjectArrayJc head;
  FieldJc data[7];
} refl_Fields_FieldJc =
{ INIZ_ObjectArrayJc(refl_Fields_FieldJc, 7, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "name"
    , 30 //nrofArrayElements                           
    , REFLECTION_int8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) | kStaticArray_Modifier_reflectJc|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((FieldJc*)(0x1000))->name)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_FieldJc
    }
  , 
    { "nrofArrayElementsOrBitfield_"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_uint16                                                                                            
    , (2<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((FieldJc*)(0x1000))->nrofArrayElementsOrBitfield_)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_FieldJc
    }
  , 
    { "type_"
    , 0   //no Array, no Bitfield                           
    , &refl_ClassJc                                                                                            
    , 0 | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((FieldJc*)(0x1000))->type_)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_FieldJc
    }
  , 
    { "bitModifiers"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((FieldJc*)(0x1000))->bitModifiers)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_FieldJc
    }
  , 
    { "offsFieldInStruct"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int16                                                                                            
    , (2<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((FieldJc*)(0x1000))->offsFieldInStruct)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_FieldJc
    }
  , 
    { "offsetToObjectifcBase"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int16                                                                                            
    , (2<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((FieldJc*)(0x1000))->offsetToObjectifcBase)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_FieldJc
    }
  , 
    { "declaringClass"
    , 0   //no Array, no Bitfield                           
    , &refl_ClassJc                                                                                            
    , 0 | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((FieldJc*)(0x1000))->declaringClass)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_FieldJc
    }
  
} }; 
 
                                                                   
const ClassJc refl_FieldJc =
{ INIZ_objReflId_ObjectJc(refl_FieldJc, refl_ClassJc, ID_refl_ClassJc)
, "FieldJc"
, 0
, sizeof(FieldJc)
, (FieldJcArray const*)&refl_Fields_FieldJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl
, null  //virtual table
#endif

};



extern_C const ClassJc refl_FieldJc_Y;  //the just defined refl_ used in the own fields.
extern_C const ClassJc refl_ObjectArrayJc;  //used for field head

extern_C const ClassJc refl_FieldJc;  //used for field data

const struct Reflection_Fields_FieldJc_Y_t
{ ObjectArrayJc head;
  FieldJc data[2];
} refl_Fields_FieldJc_Y =
{ INIZ_ObjectArrayJc(refl_Fields_FieldJc_Y, 2, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "head"
    , 0   //no Array, no Bitfield                           
    , &refl_ObjectArrayJc                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((FieldJc_Y*)(0x1000))->head)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_FieldJc_Y
    }
  , 
    { "data"
    , 0   //no Array, no Bitfield                           
    , &refl_FieldJc                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((FieldJc_Y*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_FieldJc_Y
    }
  
} }; 
 
                                                                   
const ClassJc refl_FieldJc_Y =
{ INIZ_objReflId_ObjectJc(refl_FieldJc_Y, refl_ClassJc, ID_refl_ClassJc)
, "FieldJc_Y"
, 0
, sizeof(FieldJc_Y)
, (FieldJcArray const*)&refl_Fields_FieldJc_Y  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl
, null  //virtual table
#endif

};



extern_C const ClassJc refl_int32ARRAY;  //the just defined refl_ used in the own fields.
extern_C const ClassJc refl_ObjectArrayJc;  //used for field head

const struct Reflection_Fields_int32ARRAY_t
{ ObjectArrayJc head;
  FieldJc data[2];
} refl_Fields_int32ARRAY =
{ INIZ_ObjectArrayJc(refl_Fields_int32ARRAY, 2, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "head"
    , 0   //no Array, no Bitfield                           
    , &refl_ObjectArrayJc                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((int32ARRAY*)(0x1000))->head)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_int32ARRAY
    }
  , 
    { "data"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc)|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((int32ARRAY*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_int32ARRAY
    }
  
} }; 
 
                                                                   
const ClassJc refl_int32ARRAY =
{ INIZ_objReflId_ObjectJc(refl_int32ARRAY, refl_ClassJc, ID_refl_ClassJc)
, "int32ARRAY"
, 0
, sizeof(int32ARRAY)
, (FieldJcArray const*)&refl_Fields_int32ARRAY  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl
, null  //virtual table
#endif

};



extern_C const ClassJc refl_ObjectJcARRAY;  //the just defined refl_ used in the own fields.
extern_C const ClassJc refl_ObjectArrayJc;  //used for field head

extern_C const ClassJc refl_ObjectJc;  //used for field data

const struct Reflection_Fields_ObjectJcARRAY_t
{ ObjectArrayJc head;
  FieldJc data[2];
} refl_Fields_ObjectJcARRAY =
{ INIZ_ObjectArrayJc(refl_Fields_ObjectJcARRAY, 2, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "head"
    , 0   //no Array, no Bitfield                           
    , &refl_ObjectArrayJc                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ObjectJcARRAY*)(0x1000))->head)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ObjectJcARRAY
    }
  , 
    { "data"
    , 50 //nrofArrayElements                           
    , &refl_ObjectJc                                                                                            
    , 0 | kReference_Modifier_reflectJc | kStaticArray_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ObjectJcARRAY*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ObjectJcARRAY
    }
  
} }; 
 
                                                                   
const ClassJc refl_ObjectJcARRAY =
{ INIZ_objReflId_ObjectJc(refl_ObjectJcARRAY, refl_ClassJc, ID_refl_ClassJc)
, "ObjectJcARRAY"
, 0
, sizeof(ObjectJcARRAY)
, (FieldJcArray const*)&refl_Fields_ObjectJcARRAY  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl
, null  //virtual table
#endif

};

