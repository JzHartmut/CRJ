
    
//This file is generated by ZBNF/zbnfjax/jzTc/Cheader2Refl.jzTc
#include "emC/Jc/ListJc.h"  
//#include <stddef.h>


extern_C const ClassJc reflection_ListJc;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_ObjectJc;  //used for field object
  

extern_C const ClassJc reflection_ObjectJc;  //the super class here used.
const struct SuperClasses_ListJc_ClassOffset_idxVtblJcARRAY_t  //Type for the super class
{ ObjectArrayJc head;
  ClassOffset_idxVtblJc data[1];
}  superClasses_ListJc =   //reflection instance for the super class
{ INIZ_ObjectArrayJc(superClasses_ListJc, 1, ClassOffset_idxVtblJc, null, INIZ_ID_ClassOffset_idxVtblJc)
  , { &reflection_ObjectJc                                   
    , 0 //TODO Index of mtbl of superclass
      //The field which presents the superclass data in inspector access.
    , { "super"              
      , 0 //arraysize
      , &reflection_ObjectJc  //type of super                                                                                         
      , kEmbedded_Modifier_reflectJc //hint: embd helps to show the real type.
        | (0<< kBitAccessLevel_Modifier_FieldJc)  //access level
        | (7<< kBitChangeLevel_Modifier_FieldJc)  //never change
      , 0 //offsetalways 0 (C++?)
      , 0  //offsetToObjectifcBase
      , &reflection_ObjectJc  
      }
    }
};
                                                                   
const ClassJc reflection_ListJc =
{ INIZ_objReflId_ObjectJc(reflection_ListJc, &reflection_ClassJc, INIZ_ID_ClassJc)
, "ListJc"
, 0
, sizeof(ListJc)
, null  //attributes and associations
, null  //method      
, (ClassOffset_idxVtblJcARRAY*)&superClasses_ListJc  //superclass  
, null  //interfaces  
, mObjectJc_Modifier_reflectJc   
, null  //virtual table
};



extern_C const ClassJc reflection_IteratorJc;  //the just defined reflection_ used in the own fields.
extern_C const ClassJc reflection_ObjectJc;  //used for field object
  

extern_C const ClassJc reflection_ObjectJc;  //the super class here used.
const struct SuperClasses_IteratorJc_ClassOffset_idxVtblJcARRAY_t  //Type for the super class
{ ObjectArrayJc head;
  ClassOffset_idxVtblJc data[1];
}  superClasses_IteratorJc =   //reflection instance for the super class
{ INIZ_ObjectArrayJc(superClasses_IteratorJc, 1, ClassOffset_idxVtblJc, null, INIZ_ID_ClassOffset_idxVtblJc)
  , { &reflection_ObjectJc                                   
    , 0 //TODO Index of mtbl of superclass
      //The field which presents the superclass data in inspector access.
    , { "super"              
      , 0 //arraysize
      , &reflection_ObjectJc  //type of super                                                                                         
      , kEmbedded_Modifier_reflectJc //hint: embd helps to show the real type.
        | (0<< kBitAccessLevel_Modifier_FieldJc)  //access level
        | (7<< kBitChangeLevel_Modifier_FieldJc)  //never change
      , 0 //offsetalways 0 (C++?)
      , 0  //offsetToObjectifcBase
      , &reflection_ObjectJc  
      }
    }
};
                                                                   
const ClassJc reflection_IteratorJc =
{ INIZ_objReflId_ObjectJc(reflection_IteratorJc, &reflection_ClassJc, INIZ_ID_ClassJc)
, "IteratorJc"
, 0
, sizeof(IteratorJc)
, null  //attributes and associations
, null  //method      
, (ClassOffset_idxVtblJcARRAY*)&superClasses_IteratorJc  //superclass  
, null  //interfaces  
, mObjectJc_Modifier_reflectJc   
, null  //virtual table
};

