<?Java2C-stc www.vishia.org version="0.94" encoding="UTF8" ?>
Structure of translated java-file "MsgDisp/MsgDispatcherCore_MSG"
package org/vishia/msgDispatch/;

class MsgDispatcherCore; nameC=MsgDispatcherCore_MSG_s; argIdent=XX; extends java/lang/Object implements org/vishia/msgDispatch/LogMessage //creationMode=P
{  
    //Innerclass: Entry_MsgDispatcherCore_MSG
    //Innerclass: Output_MsgDispatcherCore_MSG
    //Innerclass: TestCnt_MsgDispatcherCore_MSG
  InnerClass{ 
    final class Entry; nameC=Entry_MsgDispatcherCore_MSG_s; argIdent=XX; //creationMode=C
    {  
        //Innerclass: Entry_MsgDispatcherCore_MSG
        //Innerclass: Output_MsgDispatcherCore_MSG
        //Innerclass: TestCnt_MsgDispatcherCore_MSG
        //Innerclass: MsgDispatcherCore_MSG
    fieldIdents {
      int %.. dst;
      int %.. ident;
      //outer=2 ,super=1: int %.d mAdd;
      //outer=2 ,super=1: int %.d mConsole;
      //outer=2 ,super=1: int %.d mConsoleQueued;
      //outer=2 ,super=1: int %.d mDispatchBits;
      //outer=2 ,super=1: int %.d mDispatchInCallingThread;
      //outer=2 ,super=1: int %.d mDispatchInDispatcherThread;
      //outer=2 ,super=1: int %.d mRemove;
      //outer=2 ,super=1: int %.d mSet;
      s0(instance=s0) %.. text;
      org/vishia/bridgeC/OS_TimeStamp(instance=org/vishia/bridgeC/OS_TimeStamp) $.. timestamp;
      org/vishia/bridgeC/VaArgBuffer(instance=org/vishia/bridgeC/VaArgBuffer) $.. values;
      //outer=2 ,super=1: int %.d version;
    }
      methods {  
        _sizeof-_$, mode= static: int %.r null();
        ctorM-_$, mode= ctor+static: org/vishia/msgDispatch/MsgDispatcherCore.Entry *.. Entry_MsgDispatcherCore_MSG_s();
      }

      castTo {
        org/vishia/msgDispatch/MsgDispatcherCore: * "(?)->outer" *;
      }

    }

    final class TestCnt; nameC=TestCnt_MsgDispatcherCore_MSG_s; argIdent=XX; extends java/lang/Object //creationMode=C
    {  
        //Innerclass: Entry_MsgDispatcherCore_MSG
        //Innerclass: Output_MsgDispatcherCore_MSG
        //Innerclass: TestCnt_MsgDispatcherCore_MSG
        //Innerclass: MsgDispatcherCore_MSG
    fieldIdents {
      //outer=2 ,super=1: int %.d mAdd;
      //outer=2 ,super=1: int %.d mConsole;
      //outer=2 ,super=1: int %.d mConsoleQueued;
      //outer=2 ,super=1: int %.d mDispatchBits;
      //outer=2 ,super=1: int %.d mDispatchInCallingThread;
      //outer=2 ,super=1: int %.d mDispatchInDispatcherThread;
      //outer=2 ,super=1: int %.d mRemove;
      //outer=2 ,super=1: int %.d mSet;
      int %.. noOutput;
      int %.. tomuchMsgPerThread;
      //outer=2 ,super=1: int %.d version;
    }
      methods {  
        ctorO-_$, mode= ctor+static: org/vishia/msgDispatch/MsgDispatcherCore.TestCnt *.. TestCnt_MsgDispatcherCore_MSG_s();
      }

      castTo {
        org/vishia/msgDispatch/MsgDispatcherCore: * "(?)->outer" *;
        java/lang/Object: $ "(?).base.object" $;
      }

    }

    final class Output; nameC=Output_MsgDispatcherCore_MSG_s; argIdent=XX; //creationMode=C
    {  
        //Innerclass: Entry_MsgDispatcherCore_MSG
        //Innerclass: Output_MsgDispatcherCore_MSG
        //Innerclass: TestCnt_MsgDispatcherCore_MSG
        //Innerclass: MsgDispatcherCore_MSG
    fieldIdents {
      boolean %.. bUseText;
      boolean %.. dstInDispatcherThread;
      //outer=2 ,super=1: int %.d mAdd;
      //outer=2 ,super=1: int %.d mConsole;
      //outer=2 ,super=1: int %.d mConsoleQueued;
      //outer=2 ,super=1: int %.d mDispatchBits;
      //outer=2 ,super=1: int %.d mDispatchInCallingThread;
      //outer=2 ,super=1: int %.d mDispatchInDispatcherThread;
      //outer=2 ,super=1: int %.d mRemove;
      //outer=2 ,super=1: int %.d mSet;
      java/lang/String(instance=java/lang/String) t.. name;
      org/vishia/msgDispatch/LogMessage @.. outputIfc;
      //outer=2 ,super=1: int %.d version;
    }
      methods {  
        ctorM-_$, mode= ctor+static: org/vishia/msgDispatch/MsgDispatcherCore.Output *.. Output_MsgDispatcherCore_MSG_s();
        finalize-_$, mode= overrideable: void %.. void();
      }

      castTo {
        org/vishia/msgDispatch/MsgDispatcherCore: * "(?)->outer" *;
      }

    }

  }
fieldIdents {
  int %.. actNrofListIdents;
  int %.. ctLostMessages;
  org/vishia/bridgeC/ConcurrentLinkedQueue *.. freeOrders;
  int[??] X%. listBitDst;
  int[??] X%. listIdents;
  org/vishia/bridgeC/ConcurrentLinkedQueue *.. listOrders;
  int %.d mAdd;
  int %.d mConsole;
  int %.d mConsoleQueued;
  int %.d mDispatchBits;
  int %.d mDispatchInCallingThread;
  int %.d mDispatchInDispatcherThread;
  int %.. mDstMixedOutputs;
  int %.. mDstOneOutput;
  int %.d mRemove;
  int %.d mSet;
  org/vishia/msgDispatch/MsgText_ifc @.. msgText;
  int %.. nrofMixedOutputs;
  org/vishia/msgDispatch/MsgDispatcherCore.Output[??] X$. outputs;
  java/lang/Runnable @.. runNoEntryMessage;
  org/vishia/msgDispatch/MsgDispatcherCore.TestCnt(instance=org/vishia/msgDispatch/MsgDispatcherCore.TestCnt) $.. testCnt;
  int %.d version;
}
  methods {  
    close-_$, defined: org/vishia/msgDispatch/LogMessage.close, mode= overrideable: void %.r null();
    ctorO-_$, mode= ctor+static: org/vishia/msgDispatch/MsgDispatcherCore *.. MsgDispatcherCore_MSG_s(int %.. maxQueue,int %.. nrofMixedOutputs,java/lang/Runnable *.. runNoEntryMessage);
    dispatchMsg-_$: int %.r null(int %.. dstBits,boolean %.. bDispatchInDispatcherThread,int %.. identNumber,org/vishia/bridgeC/OS_TimeStamp(instance=org/vishia/bridgeC/OS_TimeStamp) $.. creationTime,s0(instance=s0) %.. text,org/vishia/bridgeC/Va_list(instance=org/vishia/bridgeC/Va_list) $.r args);
    finalize-_$, defined: java/lang/Object.finalize, mode= overrideable: void %.. void();
    flush-_$, defined: org/vishia/msgDispatch/LogMessage.flush, mode= overrideable: void %.r null();
    isOnline-_$, defined: org/vishia/msgDispatch/LogMessage.isOnline: boolean %.r null();
    searchDispatchBits-_$: int %.r null(int %.. ident);
    sendMsg+_izv-_$, defined: org/vishia/msgDispatch/LogMessage.sendMsg, mode= noThCxt: boolean %.r null(int %.. identNumber,s0(instance=s0) %.. text,va_argRaw +.. args);
    sendMsgTime+_iDtzv-_$, defined: org/vishia/msgDispatch/LogMessage.sendMsgTime, mode= noThCxt: boolean %.r null(int %.. identNumber,org/vishia/bridgeC/OS_TimeStamp(instance=org/vishia/bridgeC/OS_TimeStamp) $.. creationTime,s0(instance=s0) %.. text,va_argRaw +.. args);
    sendMsgVaList+_iDtzv-_$, defined: org/vishia/msgDispatch/LogMessage.sendMsgVaList: boolean %.r null(int %.. identNumber,org/vishia/bridgeC/OS_TimeStamp(instance=org/vishia/bridgeC/OS_TimeStamp) $.. creationTime,s0(instance=s0) %.. text,org/vishia/bridgeC/Va_list(instance=org/vishia/bridgeC/Va_list) $.. args);
    setMsgTextConverter-_$: void %.r null(org/vishia/msgDispatch/MsgText_ifc *.. converter);
  }

  castTo {
    org/vishia/msgDispatch/LogMessage: $ "(?).base.LogMessageFW" $;
    java/lang/Object: $ "(?).base.LogMessageFW.base.object" $;
  }

}
