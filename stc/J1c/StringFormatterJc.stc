<?Java2C-stc www.vishia.org version="0.94" encoding="UTF8" ?>
Structure of translated java-file "J1c/StringFormatterJc"
package org/vishia/util/;

class StringFormatter; nameC=StringFormatterJc_s; argIdent=XX; extends java/lang/Object implements java/lang/Appendable, java/io/Closeable, java/io/Flushable //creationMode=P
{  
fieldIdents {
  boolean %.. bInsert;
  boolean %.. bShouldLineoutClose;
  java/lang/StringBuilder @.. buffer;
  char %.. cDecimalSeparator;
  java/text/SimpleDateFormat(instance=java/text/SimpleDateFormat) @.. dateFormatNewer;
  java/text/SimpleDateFormat(instance=java/text/SimpleDateFormat) @.. dateFormatOlder;
  java/text/SimpleDateFormat(instance=java/text/SimpleDateFormat) @.. dateFormatToday;
  java/text/SimpleDateFormat(instance=java/text/SimpleDateFormat) @.. dateFormatYear;
  short %.d k1;
  short %.S k2left;
  short %.d k2right;
  short %.S k4left;
  short %.d k4right;
  short %.S k6left;
  short %.d k6right;
  short %.S k8left;
  short %.d k8right;
  char %.. lastNewline;
  java/lang/Appendable @.. lineout;
  byte %.d mBytesInWordBigEndian;
  byte %.d mNrofBytesInWord;
  long[9] Q%S n10a;
  int %.. pos;
  java/lang/String(instance=java/lang/String) t.. sDatePrefixNewer;
  java/lang/String(instance=java/lang/String) t.. sDatePrefixOlder;
  java/lang/String(instance=java/lang/String) t.. sDatePrefixToday;
  java/lang/String(instance=java/lang/String) t.. sDatePrefixYear;
  java/lang/String(instance=java/lang/String) t.s sNeg;
  java/lang/String(instance=java/lang/String) t.. sNewline;
  java/lang/String(instance=java/lang/String) t.s spaces;
  java/lang/String(instance=java/lang/String) t.s version;
}
  methods {  
    add+_Cs-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(java/lang/CharSequence *.. str);
    add+_S-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(java/lang/String(instance=java/lang/String) t.. str);
    add+_cY-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(char[??] X%. str);
    add+_c-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(char %.. ch);
    addBinary-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(int %.. value,java/lang/String(instance=java/lang/String) t.. sPicture,java/lang/String(instance=java/lang/String) t.. sBitCharLo,java/lang/String(instance=java/lang/String) t.. sBitCharHi);
    addDate-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(java/util/Date *.. date,java/text/SimpleDateFormat *.. format);
    addFloat-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(double %.. value,int %.. digitsBeforePoint,int %.. digitsAfterPoint);
    addFloatPicture-_$, mode= overrideable: int %.r null(float %.. src,java/lang/String(instance=java/lang/String) t.. pict);
    addHex-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(long %.. value,int %.. nrofDigits);
    addHex44-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(long %.. value);
    addHexLine-_$, mode= overrideable+returnThis: org/vishia/util/StringFormatter *.r null(byte[??] X%. data,int %.. idx,int %.. nrofBytes,short %.. mode);
    addHexLn-_$, mode= static: java/lang/String(instance=java/lang/String) t.r null(byte[??] X%. data,int %.. length,int %.. idxStart);
    addHexWord-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(byte[??] X%. data,int %.. idx,short %.. mode);
    addHexWord_-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(byte[??] X%. data,int %.. idx,short %.. mode);
    addIntPicture-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(long %.. nr,java/lang/String(instance=java/lang/String) t.. sPict);
    addReplaceLinefeed-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(java/lang/CharSequence *.. str,java/lang/CharSequence *.. replaceLinefeed,int %.. maxChars);
    addStringLine-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(byte[??] X%. data,int %.. idx,int %.. nrofBytes,java/lang/String(instance=java/lang/String) t.. charsetName);
    addint-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(long %.. nr,java/lang/String(instance=java/lang/String) t.. sPict);
    append+_Cs-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(java/lang/CharSequence *.. csq);
    append+_c-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(char %.. c);
    append+_Csii-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(java/lang/CharSequence *.. csq,int %.. start,int %.. end);
    close-_$, mode= overrideable: void %.r null();
    ctorO-_$, mode= ctor+static: org/vishia/util/StringFormatter *.. StringFormatterJc_s();
    ctorO+_i-_$, mode= ctor+static: org/vishia/util/StringFormatter *.. StringFormatterJc_s(int %.. length);
    ctorO+_S-_$, mode= ctor+static: org/vishia/util/StringFormatter *.. StringFormatterJc_s(java/lang/String(instance=java/lang/String) t.. str);
    ctorO+_Sb-_$, mode= ctor+static: org/vishia/util/StringFormatter *.. StringFormatterJc_s(java/lang/StringBuilder *.. buffer);
    ctorO+_ApbSi-_$, mode= ctor+static: org/vishia/util/StringFormatter *.. StringFormatterJc_s(java/lang/Appendable *.. lineout,boolean %.. shouldClose,java/lang/String(instance=java/lang/String) t.. newlineString,int %.. defaultBufferLength);
    end-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null();
    finalize-_$, defined: java/lang/Object.finalize, mode= overrideable: void %.. void();
    floatToText-_$, mode= static: java/lang/CharSequence *.r null(float %.. val,int %.. nrofChars);
    flush-_$, mode= overrideable: void %.r null();
    getBuffer-_$, mode= overrideable: java/lang/CharSequence *.r null();
    getContent-_$, mode= overrideable: java/lang/String(instance=java/lang/String) t.r null();
    getPos-_$, mode= overrideable: int %.r null();
    insert-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null();
    insert+_S-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(java/lang/String(instance=java/lang/String) t.. str);
    length-_$, mode= overrideable: int %.r null();
    overwrite-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null();
    pos+_i-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(int %.. newPos);
    pos+_ii-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(int %.. newPos,int %.. minChars);
    prepareBufferPos-_$, mode= overrideable: void %.r null(int %.. nrofChars);
    reset-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null();
    setAt-_$, mode= overrideable: org/vishia/util/StringFormatter *.r null(int %.. pos,char %.. ch);
    setDecimalSeparator-_$, mode= overrideable: void %.r null(char %.. sep);
    setInsertMode-_$, mode= overrideable: boolean %.r null(boolean %.. insert);
    strPicture-_$, mode= overrideable: boolean %.r null(long %.. src,java/lang/String(instance=java/lang/String) t.. pict,java/lang/String(instance=java/lang/String) t.. posNegPointExp,char %.. cFracSep);
    toString-_$, defined: java/lang/Object.toString, mode= overrideable: java/lang/String(instance=java/lang/String) t.r null();
  }

  methods-overrideable {
    getContent_StringFormatterJc;
    getBuffer_StringFormatterJc;
    setDecimalSeparator_StringFormatterJc;
    reset_StringFormatterJc;
    end_StringFormatterJc;
    pos_i_StringFormatterJc;
    pos_ii_StringFormatterJc;
    length_StringFormatterJc;
    getPos_StringFormatterJc;
    add_Cs_StringFormatterJc;
    add_S_StringFormatterJc;
    addReplaceLinefeed_StringFormatterJc;
    add_cY_StringFormatterJc;
    insert_S_StringFormatterJc;
    overwrite_StringFormatterJc;
    insert_StringFormatterJc;
    setInsertMode_StringFormatterJc;
    addStringLine_StringFormatterJc;
    addHexLine_StringFormatterJc;
    addHexWord_StringFormatterJc;
    addHexWord__StringFormatterJc;
    addHex_StringFormatterJc;
    addBinary_StringFormatterJc;
    prepareBufferPos_StringFormatterJc;
    addHex44_StringFormatterJc;
    addFloat_StringFormatterJc;
    add_c_StringFormatterJc;
    addDate_StringFormatterJc;
    setAt_StringFormatterJc;
    addint_StringFormatterJc;
    addIntPicture_StringFormatterJc;
    strPicture_StringFormatterJc;
    addFloatPicture_StringFormatterJc;
    append_Cs_StringFormatterJc;
    append_c_StringFormatterJc;
    append_Csii_StringFormatterJc;
    flush_StringFormatterJc;
    close_StringFormatterJc;
  }

  castTo {
    java/lang/Appendable: $ "(?).base.AppendableJc" $;
    java/io/Closeable: $ "(?).base.CloseableJc" $;
    java/io/Flushable: $ "(?).base.FlushableJc" $;
    java/lang/Object: $ "(?).base.object" $;
  }

}
