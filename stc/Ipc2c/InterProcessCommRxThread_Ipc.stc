<?Java2C-stc www.vishia.org version="0.94" encoding="UTF8" ?>
Structure of translated java-file "Ipc2c/InterProcessCommRxThread_Ipc"
package org/vishia/communication/;

class InterProcessCommRxThread; nameC=InterProcessCommRxThread_Ipc_s; argIdent=XX; extends java/lang/Object //creationMode=P
{  
    //Innerclass: C_threadRoutine_InterProcessCommRxThread_Ipc
  InnerClass{ 
    nonStaticInner anonymous class C_threadRoutine; nameC=C_threadRoutine_InterProcessCommRxThread_Ipc_s; argIdent=XX; extends java/lang/Object implements java/lang/Runnable //creationMode=Y
    {  
        //Innerclass: InterProcessCommRxThread_Ipc
    fieldIdents {
      //outer=2 ,super=1: boolean %.. bEnablePrintfOnComm;
      //outer=2 ,super=1: int %.. ctErrorTelg;
      //outer=2 ,super=1: byte[1500] Q%. data_rxBuffer;
      //outer=2 ,super=1: org/vishia/communication/InterProcessCommRx_ifc *.. execRxData;
      //outer=2 ,super=1: org/vishia/communication/InterProcessComm *.. ipc;
      //outer=2 ,super=1: org/vishia/communication/Address_InterProcessComm *.. myAnswerAddress;
      //outer=2 ,super=1: int[1] Q%. nrofBytesReceived;
      //outer=2 ,super=1: byte[??] M%. rxBuffer;
      //outer=2 ,super=1: char %.. state;
      //outer=2 ,super=1: java/lang/Thread *.. thread;
      //outer=2 ,super=1: org/vishia/communication/InterProcessCommRxThread.C_threadRoutine(instance=org/vishia/communication/InterProcessCommRxThread.C_threadRoutine) $.. threadRoutine;
      //outer=2 ,super=1: java/lang/String(instance=java/lang/String) t.s version;
    }
      methods {  
        run-_$, defined: java/lang/Runnable.run, mode= overrideable: void %.r null();
      }

      castTo {
        org/vishia/communication/InterProcessCommRxThread: * "(?)->outer" *;
        java/lang/Object: $ "(?).base.RunnableJc.base.object" $;
        java/lang/Runnable: $ "(?).base.RunnableJc" $;
      }

    }

  }
fieldIdents {
  boolean %.. bEnablePrintfOnComm;
  int %.. ctErrorTelg;
  byte[1500] Q%. data_rxBuffer;
  org/vishia/communication/InterProcessCommRx_ifc *.. execRxData;
  org/vishia/communication/InterProcessComm *.. ipc;
  org/vishia/communication/Address_InterProcessComm *.. myAnswerAddress;
  int[1] Q%. nrofBytesReceived;
  byte[??] M%. rxBuffer;
  char %.. state;
  java/lang/Thread *.. thread;
  org/vishia/communication/InterProcessCommRxThread.C_threadRoutine(instance=org/vishia/communication/InterProcessCommRxThread.C_threadRoutine) $.. threadRoutine;
  java/lang/String(instance=java/lang/String) t.s version;
}
  methods {  
    create-_$, mode= static: org/vishia/communication/InterProcessCommRxThread *.r null(java/lang/String(instance=java/lang/String) t.. ownAddrIpc,org/vishia/communication/InterProcessCommRx_ifc *.. execRxData);
    ctorO-_$, mode= ctor+static: org/vishia/communication/InterProcessCommRxThread *.. InterProcessCommRxThread_Ipc_s(java/lang/String(instance=java/lang/String) t.. ownAddrIpc,org/vishia/communication/InterProcessCommRx_ifc *.. execRxData);
    ctorO_C_threadRoutine-_$, mode= ctor+anonymousCtor+nonStaticCtor: org/vishia/communication/InterProcessCommRxThread.C_threadRoutine *.. C_threadRoutine_InterProcessCommRxThread_Ipc_s();
    openComm-_$: boolean %.r null(boolean %.. blocking);
    receiveAndExecute-_$: void %.r null();
    runThread-_$: void %.r null();
    start-_$: void %.r null();
  }

  castTo {
    java/lang/Object: $ "(?).base.object" $;
  }

}
